#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mafa2.Web.Models.LinqSql
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="MAFA")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAdministrator(Administrator instance);
    partial void UpdateAdministrator(Administrator instance);
    partial void DeleteAdministrator(Administrator instance);
    partial void InsertZahtevZaOrganizacijuBorbe(ZahtevZaOrganizacijuBorbe instance);
    partial void UpdateZahtevZaOrganizacijuBorbe(ZahtevZaOrganizacijuBorbe instance);
    partial void DeleteZahtevZaOrganizacijuBorbe(ZahtevZaOrganizacijuBorbe instance);
    partial void InsertKatalog(Katalog instance);
    partial void UpdateKatalog(Katalog instance);
    partial void DeleteKatalog(Katalog instance);
    partial void InsertKorisnik(Korisnik instance);
    partial void UpdateKorisnik(Korisnik instance);
    partial void DeleteKorisnik(Korisnik instance);
    partial void InsertMagacin(Magacin instance);
    partial void UpdateMagacin(Magacin instance);
    partial void DeleteMagacin(Magacin instance);
    partial void InsertNarudzbenica(Narudzbenica instance);
    partial void UpdateNarudzbenica(Narudzbenica instance);
    partial void DeleteNarudzbenica(Narudzbenica instance);
    partial void InsertPonuda(Ponuda instance);
    partial void UpdatePonuda(Ponuda instance);
    partial void DeletePonuda(Ponuda instance);
    partial void InsertPotvrdaDogađaja(PotvrdaDogađaja instance);
    partial void UpdatePotvrdaDogađaja(PotvrdaDogađaja instance);
    partial void DeletePotvrdaDogađaja(PotvrdaDogađaja instance);
    partial void InsertPredlogBorbe(PredlogBorbe instance);
    partial void UpdatePredlogBorbe(PredlogBorbe instance);
    partial void DeletePredlogBorbe(PredlogBorbe instance);
    partial void InsertPristup(Pristup instance);
    partial void UpdatePristup(Pristup instance);
    partial void DeletePristup(Pristup instance);
    partial void InsertProdavac(Prodavac instance);
    partial void UpdateProdavac(Prodavac instance);
    partial void DeleteProdavac(Prodavac instance);
    partial void InsertProizvod(Proizvod instance);
    partial void UpdateProizvod(Proizvod instance);
    partial void DeleteProizvod(Proizvod instance);
    partial void InsertRacun(Racun instance);
    partial void UpdateRacun(Racun instance);
    partial void DeleteRacun(Racun instance);
    partial void InsertRezervacija(Rezervacija instance);
    partial void UpdateRezervacija(Rezervacija instance);
    partial void DeleteRezervacija(Rezervacija instance);
    partial void InsertSportskoBorilačkiKlub(SportskoBorilačkiKlub instance);
    partial void UpdateSportskoBorilačkiKlub(SportskoBorilačkiKlub instance);
    partial void DeleteSportskoBorilačkiKlub(SportskoBorilačkiKlub instance);
    partial void InsertStavkaNarudzbenice(StavkaNarudzbenice instance);
    partial void UpdateStavkaNarudzbenice(StavkaNarudzbenice instance);
    partial void DeleteStavkaNarudzbenice(StavkaNarudzbenice instance);
    partial void InsertStavkaRacuna(StavkaRacuna instance);
    partial void UpdateStavkaRacuna(StavkaRacuna instance);
    partial void DeleteStavkaRacuna(StavkaRacuna instance);
    partial void InsertUloge(Uloge instance);
    partial void UpdateUloge(Uloge instance);
    partial void DeleteUloge(Uloge instance);
    partial void InsertUnosUMagacin(UnosUMagacin instance);
    partial void UpdateUnosUMagacin(UnosUMagacin instance);
    partial void DeleteUnosUMagacin(UnosUMagacin instance);
    partial void InsertZahtevZaBorbu(ZahtevZaBorbu instance);
    partial void UpdateZahtevZaBorbu(ZahtevZaBorbu instance);
    partial void DeleteZahtevZaBorbu(ZahtevZaBorbu instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["MAFAConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Administrator> Administrators
		{
			get
			{
				return this.GetTable<Administrator>();
			}
		}
		
		public System.Data.Linq.Table<ZahtevZaOrganizacijuBorbe> ZahtevZaOrganizacijuBorbes
		{
			get
			{
				return this.GetTable<ZahtevZaOrganizacijuBorbe>();
			}
		}
		
		public System.Data.Linq.Table<Katalog> Katalogs
		{
			get
			{
				return this.GetTable<Katalog>();
			}
		}
		
		public System.Data.Linq.Table<Korisnik> Korisniks
		{
			get
			{
				return this.GetTable<Korisnik>();
			}
		}
		
		public System.Data.Linq.Table<Magacin> Magacins
		{
			get
			{
				return this.GetTable<Magacin>();
			}
		}
		
		public System.Data.Linq.Table<Narudzbenica> Narudzbenicas
		{
			get
			{
				return this.GetTable<Narudzbenica>();
			}
		}
		
		public System.Data.Linq.Table<Ponuda> Ponudas
		{
			get
			{
				return this.GetTable<Ponuda>();
			}
		}
		
		public System.Data.Linq.Table<PotvrdaDogađaja> PotvrdaDogađajas
		{
			get
			{
				return this.GetTable<PotvrdaDogađaja>();
			}
		}
		
		public System.Data.Linq.Table<PredlogBorbe> PredlogBorbes
		{
			get
			{
				return this.GetTable<PredlogBorbe>();
			}
		}
		
		public System.Data.Linq.Table<Pristup> Pristups
		{
			get
			{
				return this.GetTable<Pristup>();
			}
		}
		
		public System.Data.Linq.Table<Prodavac> Prodavacs
		{
			get
			{
				return this.GetTable<Prodavac>();
			}
		}
		
		public System.Data.Linq.Table<Proizvod> Proizvods
		{
			get
			{
				return this.GetTable<Proizvod>();
			}
		}
		
		public System.Data.Linq.Table<Racun> Racuns
		{
			get
			{
				return this.GetTable<Racun>();
			}
		}
		
		public System.Data.Linq.Table<Rezervacija> Rezervacijas
		{
			get
			{
				return this.GetTable<Rezervacija>();
			}
		}
		
		public System.Data.Linq.Table<SportskoBorilačkiKlub> SportskoBorilačkiKlubs
		{
			get
			{
				return this.GetTable<SportskoBorilačkiKlub>();
			}
		}
		
		public System.Data.Linq.Table<StavkaNarudzbenice> StavkaNarudzbenices
		{
			get
			{
				return this.GetTable<StavkaNarudzbenice>();
			}
		}
		
		public System.Data.Linq.Table<StavkaRacuna> StavkaRacunas
		{
			get
			{
				return this.GetTable<StavkaRacuna>();
			}
		}
		
		public System.Data.Linq.Table<Uloge> Uloges
		{
			get
			{
				return this.GetTable<Uloge>();
			}
		}
		
		public System.Data.Linq.Table<UnosUMagacin> UnosUMagacins
		{
			get
			{
				return this.GetTable<UnosUMagacin>();
			}
		}
		
		public System.Data.Linq.Table<ZahtevZaBorbu> ZahtevZaBorbus
		{
			get
			{
				return this.GetTable<ZahtevZaBorbu>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Administrator")]
	public partial class Administrator : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDAdministratora;
		
		private string _username;
		
		private string _password;
		
		private string _Ime;
		
		private string _Prezime;
		
		private int _IDUloge;
		
		private EntitySet<ZahtevZaOrganizacijuBorbe> _ZahtevZaOrganizacijuBorbes;
		
		private EntitySet<PotvrdaDogađaja> _PotvrdaDogađajas;
		
		private EntitySet<PredlogBorbe> _PredlogBorbes;
		
		private EntitySet<Rezervacija> _Rezervacijas;
		
		private EntityRef<Uloge> _Uloge;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDAdministratoraChanging(int value);
    partial void OnIDAdministratoraChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnImeChanging(string value);
    partial void OnImeChanged();
    partial void OnPrezimeChanging(string value);
    partial void OnPrezimeChanged();
    partial void OnIDUlogeChanging(int value);
    partial void OnIDUlogeChanged();
    #endregion
		
		public Administrator()
		{
			this._ZahtevZaOrganizacijuBorbes = new EntitySet<ZahtevZaOrganizacijuBorbe>(new Action<ZahtevZaOrganizacijuBorbe>(this.attach_ZahtevZaOrganizacijuBorbes), new Action<ZahtevZaOrganizacijuBorbe>(this.detach_ZahtevZaOrganizacijuBorbes));
			this._PotvrdaDogađajas = new EntitySet<PotvrdaDogađaja>(new Action<PotvrdaDogađaja>(this.attach_PotvrdaDogađajas), new Action<PotvrdaDogađaja>(this.detach_PotvrdaDogađajas));
			this._PredlogBorbes = new EntitySet<PredlogBorbe>(new Action<PredlogBorbe>(this.attach_PredlogBorbes), new Action<PredlogBorbe>(this.detach_PredlogBorbes));
			this._Rezervacijas = new EntitySet<Rezervacija>(new Action<Rezervacija>(this.attach_Rezervacijas), new Action<Rezervacija>(this.detach_Rezervacijas));
			this._Uloge = default(EntityRef<Uloge>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDAdministratora", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDAdministratora
		{
			get
			{
				return this._IDAdministratora;
			}
			set
			{
				if ((this._IDAdministratora != value))
				{
					this.OnIDAdministratoraChanging(value);
					this.SendPropertyChanging();
					this._IDAdministratora = value;
					this.SendPropertyChanged("IDAdministratora");
					this.OnIDAdministratoraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ime", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Ime
		{
			get
			{
				return this._Ime;
			}
			set
			{
				if ((this._Ime != value))
				{
					this.OnImeChanging(value);
					this.SendPropertyChanging();
					this._Ime = value;
					this.SendPropertyChanged("Ime");
					this.OnImeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prezime", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Prezime
		{
			get
			{
				return this._Prezime;
			}
			set
			{
				if ((this._Prezime != value))
				{
					this.OnPrezimeChanging(value);
					this.SendPropertyChanging();
					this._Prezime = value;
					this.SendPropertyChanged("Prezime");
					this.OnPrezimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDUloge", DbType="Int NOT NULL")]
		public int IDUloge
		{
			get
			{
				return this._IDUloge;
			}
			set
			{
				if ((this._IDUloge != value))
				{
					if (this._Uloge.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDUlogeChanging(value);
					this.SendPropertyChanging();
					this._IDUloge = value;
					this.SendPropertyChanged("IDUloge");
					this.OnIDUlogeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Administrator_ZahtevZaOrganizacijuBorbe", Storage="_ZahtevZaOrganizacijuBorbes", ThisKey="IDAdministratora", OtherKey="IDAdministratora")]
		public EntitySet<ZahtevZaOrganizacijuBorbe> ZahtevZaOrganizacijuBorbes
		{
			get
			{
				return this._ZahtevZaOrganizacijuBorbes;
			}
			set
			{
				this._ZahtevZaOrganizacijuBorbes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Administrator_PotvrdaDogađaja", Storage="_PotvrdaDogađajas", ThisKey="IDAdministratora", OtherKey="IDAdministratora")]
		public EntitySet<PotvrdaDogađaja> PotvrdaDogađajas
		{
			get
			{
				return this._PotvrdaDogađajas;
			}
			set
			{
				this._PotvrdaDogađajas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Administrator_PredlogBorbe", Storage="_PredlogBorbes", ThisKey="IDAdministratora", OtherKey="IDAdministratora")]
		public EntitySet<PredlogBorbe> PredlogBorbes
		{
			get
			{
				return this._PredlogBorbes;
			}
			set
			{
				this._PredlogBorbes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Administrator_Rezervacija", Storage="_Rezervacijas", ThisKey="IDAdministratora", OtherKey="IDAdministratora")]
		public EntitySet<Rezervacija> Rezervacijas
		{
			get
			{
				return this._Rezervacijas;
			}
			set
			{
				this._Rezervacijas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Uloge_Administrator", Storage="_Uloge", ThisKey="IDUloge", OtherKey="IDUloge", IsForeignKey=true)]
		public Uloge Uloge
		{
			get
			{
				return this._Uloge.Entity;
			}
			set
			{
				Uloge previousValue = this._Uloge.Entity;
				if (((previousValue != value) 
							|| (this._Uloge.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Uloge.Entity = null;
						previousValue.Administrators.Remove(this);
					}
					this._Uloge.Entity = value;
					if ((value != null))
					{
						value.Administrators.Add(this);
						this._IDUloge = value.IDUloge;
					}
					else
					{
						this._IDUloge = default(int);
					}
					this.SendPropertyChanged("Uloge");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ZahtevZaOrganizacijuBorbes(ZahtevZaOrganizacijuBorbe entity)
		{
			this.SendPropertyChanging();
			entity.Administrator = this;
		}
		
		private void detach_ZahtevZaOrganizacijuBorbes(ZahtevZaOrganizacijuBorbe entity)
		{
			this.SendPropertyChanging();
			entity.Administrator = null;
		}
		
		private void attach_PotvrdaDogađajas(PotvrdaDogađaja entity)
		{
			this.SendPropertyChanging();
			entity.Administrator = this;
		}
		
		private void detach_PotvrdaDogađajas(PotvrdaDogađaja entity)
		{
			this.SendPropertyChanging();
			entity.Administrator = null;
		}
		
		private void attach_PredlogBorbes(PredlogBorbe entity)
		{
			this.SendPropertyChanging();
			entity.Administrator = this;
		}
		
		private void detach_PredlogBorbes(PredlogBorbe entity)
		{
			this.SendPropertyChanging();
			entity.Administrator = null;
		}
		
		private void attach_Rezervacijas(Rezervacija entity)
		{
			this.SendPropertyChanging();
			entity.Administrator = this;
		}
		
		private void detach_Rezervacijas(Rezervacija entity)
		{
			this.SendPropertyChanging();
			entity.Administrator = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ZahtevZaOrganizacijuBorbe")]
	public partial class ZahtevZaOrganizacijuBorbe : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDZahtevaKluba;
		
		private string _Mesto;
		
		private System.DateTime _Datum;
		
		private int _BrojParova;
		
		private int _IDAdministratora;
		
		private EntityRef<Administrator> _Administrator;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDZahtevaKlubaChanging(int value);
    partial void OnIDZahtevaKlubaChanged();
    partial void OnMestoChanging(string value);
    partial void OnMestoChanged();
    partial void OnDatumChanging(System.DateTime value);
    partial void OnDatumChanged();
    partial void OnBrojParovaChanging(int value);
    partial void OnBrojParovaChanged();
    partial void OnIDAdministratoraChanging(int value);
    partial void OnIDAdministratoraChanged();
    #endregion
		
		public ZahtevZaOrganizacijuBorbe()
		{
			this._Administrator = default(EntityRef<Administrator>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDZahtevaKluba", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDZahtevaKluba
		{
			get
			{
				return this._IDZahtevaKluba;
			}
			set
			{
				if ((this._IDZahtevaKluba != value))
				{
					this.OnIDZahtevaKlubaChanging(value);
					this.SendPropertyChanging();
					this._IDZahtevaKluba = value;
					this.SendPropertyChanged("IDZahtevaKluba");
					this.OnIDZahtevaKlubaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mesto", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Mesto
		{
			get
			{
				return this._Mesto;
			}
			set
			{
				if ((this._Mesto != value))
				{
					this.OnMestoChanging(value);
					this.SendPropertyChanging();
					this._Mesto = value;
					this.SendPropertyChanged("Mesto");
					this.OnMestoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Datum", DbType="Date NOT NULL")]
		public System.DateTime Datum
		{
			get
			{
				return this._Datum;
			}
			set
			{
				if ((this._Datum != value))
				{
					this.OnDatumChanging(value);
					this.SendPropertyChanging();
					this._Datum = value;
					this.SendPropertyChanged("Datum");
					this.OnDatumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrojParova", DbType="Int NOT NULL")]
		public int BrojParova
		{
			get
			{
				return this._BrojParova;
			}
			set
			{
				if ((this._BrojParova != value))
				{
					this.OnBrojParovaChanging(value);
					this.SendPropertyChanging();
					this._BrojParova = value;
					this.SendPropertyChanged("BrojParova");
					this.OnBrojParovaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDAdministratora", DbType="Int NOT NULL")]
		public int IDAdministratora
		{
			get
			{
				return this._IDAdministratora;
			}
			set
			{
				if ((this._IDAdministratora != value))
				{
					if (this._Administrator.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDAdministratoraChanging(value);
					this.SendPropertyChanging();
					this._IDAdministratora = value;
					this.SendPropertyChanged("IDAdministratora");
					this.OnIDAdministratoraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Administrator_ZahtevZaOrganizacijuBorbe", Storage="_Administrator", ThisKey="IDAdministratora", OtherKey="IDAdministratora", IsForeignKey=true)]
		public Administrator Administrator
		{
			get
			{
				return this._Administrator.Entity;
			}
			set
			{
				Administrator previousValue = this._Administrator.Entity;
				if (((previousValue != value) 
							|| (this._Administrator.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Administrator.Entity = null;
						previousValue.ZahtevZaOrganizacijuBorbes.Remove(this);
					}
					this._Administrator.Entity = value;
					if ((value != null))
					{
						value.ZahtevZaOrganizacijuBorbes.Add(this);
						this._IDAdministratora = value.IDAdministratora;
					}
					else
					{
						this._IDAdministratora = default(int);
					}
					this.SendPropertyChanged("Administrator");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Katalog")]
	public partial class Katalog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDKatalog;
		
		private string _NazivKataloga;
		
		private EntitySet<Proizvod> _Proizvods;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDKatalogChanging(int value);
    partial void OnIDKatalogChanged();
    partial void OnNazivKatalogaChanging(string value);
    partial void OnNazivKatalogaChanged();
    #endregion
		
		public Katalog()
		{
			this._Proizvods = new EntitySet<Proizvod>(new Action<Proizvod>(this.attach_Proizvods), new Action<Proizvod>(this.detach_Proizvods));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDKatalog", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDKatalog
		{
			get
			{
				return this._IDKatalog;
			}
			set
			{
				if ((this._IDKatalog != value))
				{
					this.OnIDKatalogChanging(value);
					this.SendPropertyChanging();
					this._IDKatalog = value;
					this.SendPropertyChanged("IDKatalog");
					this.OnIDKatalogChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NazivKataloga", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string NazivKataloga
		{
			get
			{
				return this._NazivKataloga;
			}
			set
			{
				if ((this._NazivKataloga != value))
				{
					this.OnNazivKatalogaChanging(value);
					this.SendPropertyChanging();
					this._NazivKataloga = value;
					this.SendPropertyChanged("NazivKataloga");
					this.OnNazivKatalogaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Katalog_Proizvod", Storage="_Proizvods", ThisKey="IDKatalog", OtherKey="IDKatalog")]
		public EntitySet<Proizvod> Proizvods
		{
			get
			{
				return this._Proizvods;
			}
			set
			{
				this._Proizvods.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Proizvods(Proizvod entity)
		{
			this.SendPropertyChanging();
			entity.Katalog = this;
		}
		
		private void detach_Proizvods(Proizvod entity)
		{
			this.SendPropertyChanging();
			entity.Katalog = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Korisnik")]
	public partial class Korisnik : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDKorisnika;
		
		private string _username;
		
		private string _passwordKorisnika;
		
		private string _Ime;
		
		private string _Prezime;
		
		private System.Nullable<int> _Godine;
		
		private string _MestoStanovanja;
		
		private string _brTelefona;
		
		private string _email;
		
		private int _Tezina;
		
		private int _Visina;
		
		private System.Nullable<int> _BrDobijenihBorbi;
		
		private System.Nullable<int> _BrIzgubljenihBorbi;
		
		private int _IDUloge;
		
		private string _Adresa;
		
		private string _BorilackaVestina;
		
		private EntitySet<Narudzbenica> _Narudzbenicas;
		
		private EntitySet<PredlogBorbe> _PredlogBorbes;
		
		private EntitySet<PredlogBorbe> _PredlogBorbes1;
		
		private EntitySet<Racun> _Racuns;
		
		private EntitySet<ZahtevZaBorbu> _ZahtevZaBorbus;
		
		private EntityRef<Uloge> _Uloge;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDKorisnikaChanging(int value);
    partial void OnIDKorisnikaChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnpasswordKorisnikaChanging(string value);
    partial void OnpasswordKorisnikaChanged();
    partial void OnImeChanging(string value);
    partial void OnImeChanged();
    partial void OnPrezimeChanging(string value);
    partial void OnPrezimeChanged();
    partial void OnGodineChanging(System.Nullable<int> value);
    partial void OnGodineChanged();
    partial void OnMestoStanovanjaChanging(string value);
    partial void OnMestoStanovanjaChanged();
    partial void OnbrTelefonaChanging(string value);
    partial void OnbrTelefonaChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnTezinaChanging(int value);
    partial void OnTezinaChanged();
    partial void OnVisinaChanging(int value);
    partial void OnVisinaChanged();
    partial void OnBrDobijenihBorbiChanging(System.Nullable<int> value);
    partial void OnBrDobijenihBorbiChanged();
    partial void OnBrIzgubljenihBorbiChanging(System.Nullable<int> value);
    partial void OnBrIzgubljenihBorbiChanged();
    partial void OnIDUlogeChanging(int value);
    partial void OnIDUlogeChanged();
    partial void OnAdresaChanging(string value);
    partial void OnAdresaChanged();
    partial void OnBorilackaVestinaChanging(string value);
    partial void OnBorilackaVestinaChanged();
    #endregion
		
		public Korisnik()
		{
			this._Narudzbenicas = new EntitySet<Narudzbenica>(new Action<Narudzbenica>(this.attach_Narudzbenicas), new Action<Narudzbenica>(this.detach_Narudzbenicas));
			this._PredlogBorbes = new EntitySet<PredlogBorbe>(new Action<PredlogBorbe>(this.attach_PredlogBorbes), new Action<PredlogBorbe>(this.detach_PredlogBorbes));
			this._PredlogBorbes1 = new EntitySet<PredlogBorbe>(new Action<PredlogBorbe>(this.attach_PredlogBorbes1), new Action<PredlogBorbe>(this.detach_PredlogBorbes1));
			this._Racuns = new EntitySet<Racun>(new Action<Racun>(this.attach_Racuns), new Action<Racun>(this.detach_Racuns));
			this._ZahtevZaBorbus = new EntitySet<ZahtevZaBorbu>(new Action<ZahtevZaBorbu>(this.attach_ZahtevZaBorbus), new Action<ZahtevZaBorbu>(this.detach_ZahtevZaBorbus));
			this._Uloge = default(EntityRef<Uloge>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDKorisnika", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDKorisnika
		{
			get
			{
				return this._IDKorisnika;
			}
			set
			{
				if ((this._IDKorisnika != value))
				{
					this.OnIDKorisnikaChanging(value);
					this.SendPropertyChanging();
					this._IDKorisnika = value;
					this.SendPropertyChanged("IDKorisnika");
					this.OnIDKorisnikaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_passwordKorisnika", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string passwordKorisnika
		{
			get
			{
				return this._passwordKorisnika;
			}
			set
			{
				if ((this._passwordKorisnika != value))
				{
					this.OnpasswordKorisnikaChanging(value);
					this.SendPropertyChanging();
					this._passwordKorisnika = value;
					this.SendPropertyChanged("passwordKorisnika");
					this.OnpasswordKorisnikaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ime", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Ime
		{
			get
			{
				return this._Ime;
			}
			set
			{
				if ((this._Ime != value))
				{
					this.OnImeChanging(value);
					this.SendPropertyChanging();
					this._Ime = value;
					this.SendPropertyChanged("Ime");
					this.OnImeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prezime", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Prezime
		{
			get
			{
				return this._Prezime;
			}
			set
			{
				if ((this._Prezime != value))
				{
					this.OnPrezimeChanging(value);
					this.SendPropertyChanging();
					this._Prezime = value;
					this.SendPropertyChanged("Prezime");
					this.OnPrezimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Godine", DbType="Int")]
		public System.Nullable<int> Godine
		{
			get
			{
				return this._Godine;
			}
			set
			{
				if ((this._Godine != value))
				{
					this.OnGodineChanging(value);
					this.SendPropertyChanging();
					this._Godine = value;
					this.SendPropertyChanged("Godine");
					this.OnGodineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MestoStanovanja", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string MestoStanovanja
		{
			get
			{
				return this._MestoStanovanja;
			}
			set
			{
				if ((this._MestoStanovanja != value))
				{
					this.OnMestoStanovanjaChanging(value);
					this.SendPropertyChanging();
					this._MestoStanovanja = value;
					this.SendPropertyChanged("MestoStanovanja");
					this.OnMestoStanovanjaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_brTelefona", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string brTelefona
		{
			get
			{
				return this._brTelefona;
			}
			set
			{
				if ((this._brTelefona != value))
				{
					this.OnbrTelefonaChanging(value);
					this.SendPropertyChanging();
					this._brTelefona = value;
					this.SendPropertyChanged("brTelefona");
					this.OnbrTelefonaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tezina", DbType="Int NOT NULL")]
		public int Tezina
		{
			get
			{
				return this._Tezina;
			}
			set
			{
				if ((this._Tezina != value))
				{
					this.OnTezinaChanging(value);
					this.SendPropertyChanging();
					this._Tezina = value;
					this.SendPropertyChanged("Tezina");
					this.OnTezinaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Visina", DbType="Int NOT NULL")]
		public int Visina
		{
			get
			{
				return this._Visina;
			}
			set
			{
				if ((this._Visina != value))
				{
					this.OnVisinaChanging(value);
					this.SendPropertyChanging();
					this._Visina = value;
					this.SendPropertyChanged("Visina");
					this.OnVisinaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrDobijenihBorbi", DbType="Int")]
		public System.Nullable<int> BrDobijenihBorbi
		{
			get
			{
				return this._BrDobijenihBorbi;
			}
			set
			{
				if ((this._BrDobijenihBorbi != value))
				{
					this.OnBrDobijenihBorbiChanging(value);
					this.SendPropertyChanging();
					this._BrDobijenihBorbi = value;
					this.SendPropertyChanged("BrDobijenihBorbi");
					this.OnBrDobijenihBorbiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrIzgubljenihBorbi", DbType="Int")]
		public System.Nullable<int> BrIzgubljenihBorbi
		{
			get
			{
				return this._BrIzgubljenihBorbi;
			}
			set
			{
				if ((this._BrIzgubljenihBorbi != value))
				{
					this.OnBrIzgubljenihBorbiChanging(value);
					this.SendPropertyChanging();
					this._BrIzgubljenihBorbi = value;
					this.SendPropertyChanged("BrIzgubljenihBorbi");
					this.OnBrIzgubljenihBorbiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDUloge", DbType="Int NOT NULL")]
		public int IDUloge
		{
			get
			{
				return this._IDUloge;
			}
			set
			{
				if ((this._IDUloge != value))
				{
					if (this._Uloge.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDUlogeChanging(value);
					this.SendPropertyChanging();
					this._IDUloge = value;
					this.SendPropertyChanged("IDUloge");
					this.OnIDUlogeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Adresa", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Adresa
		{
			get
			{
				return this._Adresa;
			}
			set
			{
				if ((this._Adresa != value))
				{
					this.OnAdresaChanging(value);
					this.SendPropertyChanging();
					this._Adresa = value;
					this.SendPropertyChanged("Adresa");
					this.OnAdresaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BorilackaVestina", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string BorilackaVestina
		{
			get
			{
				return this._BorilackaVestina;
			}
			set
			{
				if ((this._BorilackaVestina != value))
				{
					this.OnBorilackaVestinaChanging(value);
					this.SendPropertyChanging();
					this._BorilackaVestina = value;
					this.SendPropertyChanged("BorilackaVestina");
					this.OnBorilackaVestinaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Korisnik_Narudzbenica", Storage="_Narudzbenicas", ThisKey="IDKorisnika", OtherKey="IDKorisnika")]
		public EntitySet<Narudzbenica> Narudzbenicas
		{
			get
			{
				return this._Narudzbenicas;
			}
			set
			{
				this._Narudzbenicas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Korisnik_PredlogBorbe", Storage="_PredlogBorbes", ThisKey="IDKorisnika", OtherKey="IDKorisnika1")]
		public EntitySet<PredlogBorbe> PredlogBorbes
		{
			get
			{
				return this._PredlogBorbes;
			}
			set
			{
				this._PredlogBorbes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Korisnik_PredlogBorbe1", Storage="_PredlogBorbes1", ThisKey="IDKorisnika", OtherKey="IDKorisnika2")]
		public EntitySet<PredlogBorbe> PredlogBorbes1
		{
			get
			{
				return this._PredlogBorbes1;
			}
			set
			{
				this._PredlogBorbes1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Korisnik_Racun", Storage="_Racuns", ThisKey="IDKorisnika", OtherKey="IDKorisnik")]
		public EntitySet<Racun> Racuns
		{
			get
			{
				return this._Racuns;
			}
			set
			{
				this._Racuns.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Korisnik_ZahtevZaBorbu", Storage="_ZahtevZaBorbus", ThisKey="IDKorisnika", OtherKey="IDKorisnik")]
		public EntitySet<ZahtevZaBorbu> ZahtevZaBorbus
		{
			get
			{
				return this._ZahtevZaBorbus;
			}
			set
			{
				this._ZahtevZaBorbus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Uloge_Korisnik", Storage="_Uloge", ThisKey="IDUloge", OtherKey="IDUloge", IsForeignKey=true)]
		public Uloge Uloge
		{
			get
			{
				return this._Uloge.Entity;
			}
			set
			{
				Uloge previousValue = this._Uloge.Entity;
				if (((previousValue != value) 
							|| (this._Uloge.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Uloge.Entity = null;
						previousValue.Korisniks.Remove(this);
					}
					this._Uloge.Entity = value;
					if ((value != null))
					{
						value.Korisniks.Add(this);
						this._IDUloge = value.IDUloge;
					}
					else
					{
						this._IDUloge = default(int);
					}
					this.SendPropertyChanged("Uloge");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Narudzbenicas(Narudzbenica entity)
		{
			this.SendPropertyChanging();
			entity.Korisnik = this;
		}
		
		private void detach_Narudzbenicas(Narudzbenica entity)
		{
			this.SendPropertyChanging();
			entity.Korisnik = null;
		}
		
		private void attach_PredlogBorbes(PredlogBorbe entity)
		{
			this.SendPropertyChanging();
			entity.Korisnik = this;
		}
		
		private void detach_PredlogBorbes(PredlogBorbe entity)
		{
			this.SendPropertyChanging();
			entity.Korisnik = null;
		}
		
		private void attach_PredlogBorbes1(PredlogBorbe entity)
		{
			this.SendPropertyChanging();
			entity.Korisnik1 = this;
		}
		
		private void detach_PredlogBorbes1(PredlogBorbe entity)
		{
			this.SendPropertyChanging();
			entity.Korisnik1 = null;
		}
		
		private void attach_Racuns(Racun entity)
		{
			this.SendPropertyChanging();
			entity.Korisnik = this;
		}
		
		private void detach_Racuns(Racun entity)
		{
			this.SendPropertyChanging();
			entity.Korisnik = null;
		}
		
		private void attach_ZahtevZaBorbus(ZahtevZaBorbu entity)
		{
			this.SendPropertyChanging();
			entity.Korisnik = this;
		}
		
		private void detach_ZahtevZaBorbus(ZahtevZaBorbu entity)
		{
			this.SendPropertyChanging();
			entity.Korisnik = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Magacin")]
	public partial class Magacin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDMagacina;
		
		private string _SifraProizvoda;
		
		private System.Nullable<int> _Stanje;
		
		private EntitySet<UnosUMagacin> _UnosUMagacins;
		
		private EntityRef<Proizvod> _Proizvod;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDMagacinaChanging(int value);
    partial void OnIDMagacinaChanged();
    partial void OnSifraProizvodaChanging(string value);
    partial void OnSifraProizvodaChanged();
    partial void OnStanjeChanging(System.Nullable<int> value);
    partial void OnStanjeChanged();
    #endregion
		
		public Magacin()
		{
			this._UnosUMagacins = new EntitySet<UnosUMagacin>(new Action<UnosUMagacin>(this.attach_UnosUMagacins), new Action<UnosUMagacin>(this.detach_UnosUMagacins));
			this._Proizvod = default(EntityRef<Proizvod>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDMagacina", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDMagacina
		{
			get
			{
				return this._IDMagacina;
			}
			set
			{
				if ((this._IDMagacina != value))
				{
					this.OnIDMagacinaChanging(value);
					this.SendPropertyChanging();
					this._IDMagacina = value;
					this.SendPropertyChanged("IDMagacina");
					this.OnIDMagacinaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SifraProizvoda", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SifraProizvoda
		{
			get
			{
				return this._SifraProizvoda;
			}
			set
			{
				if ((this._SifraProizvoda != value))
				{
					if (this._Proizvod.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSifraProizvodaChanging(value);
					this.SendPropertyChanging();
					this._SifraProizvoda = value;
					this.SendPropertyChanged("SifraProizvoda");
					this.OnSifraProizvodaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stanje", DbType="Int")]
		public System.Nullable<int> Stanje
		{
			get
			{
				return this._Stanje;
			}
			set
			{
				if ((this._Stanje != value))
				{
					this.OnStanjeChanging(value);
					this.SendPropertyChanging();
					this._Stanje = value;
					this.SendPropertyChanged("Stanje");
					this.OnStanjeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Magacin_UnosUMagacin", Storage="_UnosUMagacins", ThisKey="IDMagacina,SifraProizvoda", OtherKey="IDMagacina,SifraProizoda")]
		public EntitySet<UnosUMagacin> UnosUMagacins
		{
			get
			{
				return this._UnosUMagacins;
			}
			set
			{
				this._UnosUMagacins.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Proizvod_Magacin", Storage="_Proizvod", ThisKey="SifraProizvoda", OtherKey="SifraProizvoda", IsForeignKey=true)]
		public Proizvod Proizvod
		{
			get
			{
				return this._Proizvod.Entity;
			}
			set
			{
				Proizvod previousValue = this._Proizvod.Entity;
				if (((previousValue != value) 
							|| (this._Proizvod.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Proizvod.Entity = null;
						previousValue.Magacins.Remove(this);
					}
					this._Proizvod.Entity = value;
					if ((value != null))
					{
						value.Magacins.Add(this);
						this._SifraProizvoda = value.SifraProizvoda;
					}
					else
					{
						this._SifraProizvoda = default(string);
					}
					this.SendPropertyChanged("Proizvod");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UnosUMagacins(UnosUMagacin entity)
		{
			this.SendPropertyChanging();
			entity.Magacin = this;
		}
		
		private void detach_UnosUMagacins(UnosUMagacin entity)
		{
			this.SendPropertyChanging();
			entity.Magacin = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Narudzbenica")]
	public partial class Narudzbenica : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _IDNarudzbenice;
		
		private System.Nullable<System.DateTime> _DatumVreme;
		
		private string _AdresaZaIsporuku;
		
		private string _Grad;
		
		private string _ZipCode;
		
		private double _TotalCena;
		
		private System.Nullable<int> _IDKorisnika;
		
		private EntitySet<StavkaNarudzbenice> _StavkaNarudzbenices;
		
		private EntityRef<Korisnik> _Korisnik;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDNarudzbeniceChanging(string value);
    partial void OnIDNarudzbeniceChanged();
    partial void OnDatumVremeChanging(System.Nullable<System.DateTime> value);
    partial void OnDatumVremeChanged();
    partial void OnAdresaZaIsporukuChanging(string value);
    partial void OnAdresaZaIsporukuChanged();
    partial void OnGradChanging(string value);
    partial void OnGradChanged();
    partial void OnZipCodeChanging(string value);
    partial void OnZipCodeChanged();
    partial void OnTotalCenaChanging(double value);
    partial void OnTotalCenaChanged();
    partial void OnIDKorisnikaChanging(System.Nullable<int> value);
    partial void OnIDKorisnikaChanged();
    #endregion
		
		public Narudzbenica()
		{
			this._StavkaNarudzbenices = new EntitySet<StavkaNarudzbenice>(new Action<StavkaNarudzbenice>(this.attach_StavkaNarudzbenices), new Action<StavkaNarudzbenice>(this.detach_StavkaNarudzbenices));
			this._Korisnik = default(EntityRef<Korisnik>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDNarudzbenice", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string IDNarudzbenice
		{
			get
			{
				return this._IDNarudzbenice;
			}
			set
			{
				if ((this._IDNarudzbenice != value))
				{
					this.OnIDNarudzbeniceChanging(value);
					this.SendPropertyChanging();
					this._IDNarudzbenice = value;
					this.SendPropertyChanged("IDNarudzbenice");
					this.OnIDNarudzbeniceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DatumVreme", DbType="DateTime")]
		public System.Nullable<System.DateTime> DatumVreme
		{
			get
			{
				return this._DatumVreme;
			}
			set
			{
				if ((this._DatumVreme != value))
				{
					this.OnDatumVremeChanging(value);
					this.SendPropertyChanging();
					this._DatumVreme = value;
					this.SendPropertyChanged("DatumVreme");
					this.OnDatumVremeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdresaZaIsporuku", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string AdresaZaIsporuku
		{
			get
			{
				return this._AdresaZaIsporuku;
			}
			set
			{
				if ((this._AdresaZaIsporuku != value))
				{
					this.OnAdresaZaIsporukuChanging(value);
					this.SendPropertyChanging();
					this._AdresaZaIsporuku = value;
					this.SendPropertyChanged("AdresaZaIsporuku");
					this.OnAdresaZaIsporukuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Grad", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Grad
		{
			get
			{
				return this._Grad;
			}
			set
			{
				if ((this._Grad != value))
				{
					this.OnGradChanging(value);
					this.SendPropertyChanging();
					this._Grad = value;
					this.SendPropertyChanged("Grad");
					this.OnGradChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZipCode", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string ZipCode
		{
			get
			{
				return this._ZipCode;
			}
			set
			{
				if ((this._ZipCode != value))
				{
					this.OnZipCodeChanging(value);
					this.SendPropertyChanging();
					this._ZipCode = value;
					this.SendPropertyChanged("ZipCode");
					this.OnZipCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalCena", DbType="Float NOT NULL")]
		public double TotalCena
		{
			get
			{
				return this._TotalCena;
			}
			set
			{
				if ((this._TotalCena != value))
				{
					this.OnTotalCenaChanging(value);
					this.SendPropertyChanging();
					this._TotalCena = value;
					this.SendPropertyChanged("TotalCena");
					this.OnTotalCenaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDKorisnika", DbType="Int")]
		public System.Nullable<int> IDKorisnika
		{
			get
			{
				return this._IDKorisnika;
			}
			set
			{
				if ((this._IDKorisnika != value))
				{
					if (this._Korisnik.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDKorisnikaChanging(value);
					this.SendPropertyChanging();
					this._IDKorisnika = value;
					this.SendPropertyChanged("IDKorisnika");
					this.OnIDKorisnikaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Narudzbenica_StavkaNarudzbenice", Storage="_StavkaNarudzbenices", ThisKey="IDNarudzbenice", OtherKey="IDNarudzbenice")]
		public EntitySet<StavkaNarudzbenice> StavkaNarudzbenices
		{
			get
			{
				return this._StavkaNarudzbenices;
			}
			set
			{
				this._StavkaNarudzbenices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Korisnik_Narudzbenica", Storage="_Korisnik", ThisKey="IDKorisnika", OtherKey="IDKorisnika", IsForeignKey=true)]
		public Korisnik Korisnik
		{
			get
			{
				return this._Korisnik.Entity;
			}
			set
			{
				Korisnik previousValue = this._Korisnik.Entity;
				if (((previousValue != value) 
							|| (this._Korisnik.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Korisnik.Entity = null;
						previousValue.Narudzbenicas.Remove(this);
					}
					this._Korisnik.Entity = value;
					if ((value != null))
					{
						value.Narudzbenicas.Add(this);
						this._IDKorisnika = value.IDKorisnika;
					}
					else
					{
						this._IDKorisnika = default(Nullable<int>);
					}
					this.SendPropertyChanged("Korisnik");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_StavkaNarudzbenices(StavkaNarudzbenice entity)
		{
			this.SendPropertyChanging();
			entity.Narudzbenica = this;
		}
		
		private void detach_StavkaNarudzbenices(StavkaNarudzbenice entity)
		{
			this.SendPropertyChanging();
			entity.Narudzbenica = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ponuda")]
	public partial class Ponuda : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDPonude;
		
		private System.DateTime _Satnica;
		
		private int _Cena;
		
		private string _Napomene;
		
		private string _IDSportskoBorilackogKluba;
		
		private EntityRef<SportskoBorilačkiKlub> _SportskoBorilačkiKlub;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDPonudeChanging(int value);
    partial void OnIDPonudeChanged();
    partial void OnSatnicaChanging(System.DateTime value);
    partial void OnSatnicaChanged();
    partial void OnCenaChanging(int value);
    partial void OnCenaChanged();
    partial void OnNapomeneChanging(string value);
    partial void OnNapomeneChanged();
    partial void OnIDSportskoBorilackogKlubaChanging(string value);
    partial void OnIDSportskoBorilackogKlubaChanged();
    #endregion
		
		public Ponuda()
		{
			this._SportskoBorilačkiKlub = default(EntityRef<SportskoBorilačkiKlub>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPonude", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDPonude
		{
			get
			{
				return this._IDPonude;
			}
			set
			{
				if ((this._IDPonude != value))
				{
					this.OnIDPonudeChanging(value);
					this.SendPropertyChanging();
					this._IDPonude = value;
					this.SendPropertyChanged("IDPonude");
					this.OnIDPonudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Satnica", DbType="DateTime NOT NULL")]
		public System.DateTime Satnica
		{
			get
			{
				return this._Satnica;
			}
			set
			{
				if ((this._Satnica != value))
				{
					this.OnSatnicaChanging(value);
					this.SendPropertyChanging();
					this._Satnica = value;
					this.SendPropertyChanged("Satnica");
					this.OnSatnicaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cena", DbType="Int NOT NULL")]
		public int Cena
		{
			get
			{
				return this._Cena;
			}
			set
			{
				if ((this._Cena != value))
				{
					this.OnCenaChanging(value);
					this.SendPropertyChanging();
					this._Cena = value;
					this.SendPropertyChanged("Cena");
					this.OnCenaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Napomene", DbType="NVarChar(50)")]
		public string Napomene
		{
			get
			{
				return this._Napomene;
			}
			set
			{
				if ((this._Napomene != value))
				{
					this.OnNapomeneChanging(value);
					this.SendPropertyChanging();
					this._Napomene = value;
					this.SendPropertyChanged("Napomene");
					this.OnNapomeneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDSportskoBorilackogKluba", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string IDSportskoBorilackogKluba
		{
			get
			{
				return this._IDSportskoBorilackogKluba;
			}
			set
			{
				if ((this._IDSportskoBorilackogKluba != value))
				{
					if (this._SportskoBorilačkiKlub.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDSportskoBorilackogKlubaChanging(value);
					this.SendPropertyChanging();
					this._IDSportskoBorilackogKluba = value;
					this.SendPropertyChanged("IDSportskoBorilackogKluba");
					this.OnIDSportskoBorilackogKlubaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SportskoBorilačkiKlub_Ponuda", Storage="_SportskoBorilačkiKlub", ThisKey="IDSportskoBorilackogKluba", OtherKey="IDSportskoBorilačkogKluba", IsForeignKey=true)]
		public SportskoBorilačkiKlub SportskoBorilačkiKlub
		{
			get
			{
				return this._SportskoBorilačkiKlub.Entity;
			}
			set
			{
				SportskoBorilačkiKlub previousValue = this._SportskoBorilačkiKlub.Entity;
				if (((previousValue != value) 
							|| (this._SportskoBorilačkiKlub.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SportskoBorilačkiKlub.Entity = null;
						previousValue.Ponudas.Remove(this);
					}
					this._SportskoBorilačkiKlub.Entity = value;
					if ((value != null))
					{
						value.Ponudas.Add(this);
						this._IDSportskoBorilackogKluba = value.IDSportskoBorilačkogKluba;
					}
					else
					{
						this._IDSportskoBorilackogKluba = default(string);
					}
					this.SendPropertyChanged("SportskoBorilačkiKlub");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PotvrdaDogađaja")]
	public partial class PotvrdaDogađaja : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDPotvrde;
		
		private System.TimeSpan _Satnica;
		
		private string _Napomene;
		
		private int _IDAdministratora;
		
		private System.DateTime _datumBorbe;
		
		private EntityRef<Administrator> _Administrator;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDPotvrdeChanging(int value);
    partial void OnIDPotvrdeChanged();
    partial void OnSatnicaChanging(System.TimeSpan value);
    partial void OnSatnicaChanged();
    partial void OnNapomeneChanging(string value);
    partial void OnNapomeneChanged();
    partial void OnIDAdministratoraChanging(int value);
    partial void OnIDAdministratoraChanged();
    partial void OndatumBorbeChanging(System.DateTime value);
    partial void OndatumBorbeChanged();
    #endregion
		
		public PotvrdaDogađaja()
		{
			this._Administrator = default(EntityRef<Administrator>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPotvrde", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDPotvrde
		{
			get
			{
				return this._IDPotvrde;
			}
			set
			{
				if ((this._IDPotvrde != value))
				{
					this.OnIDPotvrdeChanging(value);
					this.SendPropertyChanging();
					this._IDPotvrde = value;
					this.SendPropertyChanged("IDPotvrde");
					this.OnIDPotvrdeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Satnica", DbType="Time NOT NULL")]
		public System.TimeSpan Satnica
		{
			get
			{
				return this._Satnica;
			}
			set
			{
				if ((this._Satnica != value))
				{
					this.OnSatnicaChanging(value);
					this.SendPropertyChanging();
					this._Satnica = value;
					this.SendPropertyChanged("Satnica");
					this.OnSatnicaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Napomene", DbType="NVarChar(MAX)")]
		public string Napomene
		{
			get
			{
				return this._Napomene;
			}
			set
			{
				if ((this._Napomene != value))
				{
					this.OnNapomeneChanging(value);
					this.SendPropertyChanging();
					this._Napomene = value;
					this.SendPropertyChanged("Napomene");
					this.OnNapomeneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDAdministratora", DbType="Int NOT NULL")]
		public int IDAdministratora
		{
			get
			{
				return this._IDAdministratora;
			}
			set
			{
				if ((this._IDAdministratora != value))
				{
					if (this._Administrator.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDAdministratoraChanging(value);
					this.SendPropertyChanging();
					this._IDAdministratora = value;
					this.SendPropertyChanged("IDAdministratora");
					this.OnIDAdministratoraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_datumBorbe", DbType="DateTime NOT NULL")]
		public System.DateTime datumBorbe
		{
			get
			{
				return this._datumBorbe;
			}
			set
			{
				if ((this._datumBorbe != value))
				{
					this.OndatumBorbeChanging(value);
					this.SendPropertyChanging();
					this._datumBorbe = value;
					this.SendPropertyChanged("datumBorbe");
					this.OndatumBorbeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Administrator_PotvrdaDogađaja", Storage="_Administrator", ThisKey="IDAdministratora", OtherKey="IDAdministratora", IsForeignKey=true)]
		public Administrator Administrator
		{
			get
			{
				return this._Administrator.Entity;
			}
			set
			{
				Administrator previousValue = this._Administrator.Entity;
				if (((previousValue != value) 
							|| (this._Administrator.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Administrator.Entity = null;
						previousValue.PotvrdaDogađajas.Remove(this);
					}
					this._Administrator.Entity = value;
					if ((value != null))
					{
						value.PotvrdaDogađajas.Add(this);
						this._IDAdministratora = value.IDAdministratora;
					}
					else
					{
						this._IDAdministratora = default(int);
					}
					this.SendPropertyChanged("Administrator");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PredlogBorbe")]
	public partial class PredlogBorbe : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _IDPredloga;
		
		private int _IDKorisnika1;
		
		private int _IDKorisnika2;
		
		private System.DateTime _datumVremeBorbe;
		
		private System.Nullable<System.TimeSpan> _vremeBorbe;
		
		private string _tipBorbe;
		
		private string _tezinskaKategorija;
		
		private int _Cena;
		
		private string _Napomene;
		
		private int _IDAdministratora;
		
		private string _IDSportskoBorilačkogKluba;
		
		private bool _PrviOdgovor;
		
		private bool _DrugiOdgovor;
		
		private bool _StanjePredloga;
		
		private EntityRef<Administrator> _Administrator;
		
		private EntityRef<Korisnik> _Korisnik;
		
		private EntityRef<Korisnik> _Korisnik1;
		
		private EntityRef<SportskoBorilačkiKlub> _SportskoBorilačkiKlub;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDPredlogaChanging(string value);
    partial void OnIDPredlogaChanged();
    partial void OnIDKorisnika1Changing(int value);
    partial void OnIDKorisnika1Changed();
    partial void OnIDKorisnika2Changing(int value);
    partial void OnIDKorisnika2Changed();
    partial void OndatumVremeBorbeChanging(System.DateTime value);
    partial void OndatumVremeBorbeChanged();
    partial void OnvremeBorbeChanging(System.Nullable<System.TimeSpan> value);
    partial void OnvremeBorbeChanged();
    partial void OntipBorbeChanging(string value);
    partial void OntipBorbeChanged();
    partial void OntezinskaKategorijaChanging(string value);
    partial void OntezinskaKategorijaChanged();
    partial void OnCenaChanging(int value);
    partial void OnCenaChanged();
    partial void OnNapomeneChanging(string value);
    partial void OnNapomeneChanged();
    partial void OnIDAdministratoraChanging(int value);
    partial void OnIDAdministratoraChanged();
    partial void OnIDSportskoBorilačkogKlubaChanging(string value);
    partial void OnIDSportskoBorilačkogKlubaChanged();
    partial void OnPrviOdgovorChanging(bool value);
    partial void OnPrviOdgovorChanged();
    partial void OnDrugiOdgovorChanging(bool value);
    partial void OnDrugiOdgovorChanged();
    partial void OnStanjePredlogaChanging(bool value);
    partial void OnStanjePredlogaChanged();
    #endregion
		
		public PredlogBorbe()
		{
			this._Administrator = default(EntityRef<Administrator>);
			this._Korisnik = default(EntityRef<Korisnik>);
			this._Korisnik1 = default(EntityRef<Korisnik>);
			this._SportskoBorilačkiKlub = default(EntityRef<SportskoBorilačkiKlub>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPredloga", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string IDPredloga
		{
			get
			{
				return this._IDPredloga;
			}
			set
			{
				if ((this._IDPredloga != value))
				{
					this.OnIDPredlogaChanging(value);
					this.SendPropertyChanging();
					this._IDPredloga = value;
					this.SendPropertyChanged("IDPredloga");
					this.OnIDPredlogaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDKorisnika1", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDKorisnika1
		{
			get
			{
				return this._IDKorisnika1;
			}
			set
			{
				if ((this._IDKorisnika1 != value))
				{
					if (this._Korisnik.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDKorisnika1Changing(value);
					this.SendPropertyChanging();
					this._IDKorisnika1 = value;
					this.SendPropertyChanged("IDKorisnika1");
					this.OnIDKorisnika1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDKorisnika2", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDKorisnika2
		{
			get
			{
				return this._IDKorisnika2;
			}
			set
			{
				if ((this._IDKorisnika2 != value))
				{
					if (this._Korisnik1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDKorisnika2Changing(value);
					this.SendPropertyChanging();
					this._IDKorisnika2 = value;
					this.SendPropertyChanged("IDKorisnika2");
					this.OnIDKorisnika2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_datumVremeBorbe", DbType="DateTime NOT NULL")]
		public System.DateTime datumVremeBorbe
		{
			get
			{
				return this._datumVremeBorbe;
			}
			set
			{
				if ((this._datumVremeBorbe != value))
				{
					this.OndatumVremeBorbeChanging(value);
					this.SendPropertyChanging();
					this._datumVremeBorbe = value;
					this.SendPropertyChanged("datumVremeBorbe");
					this.OndatumVremeBorbeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vremeBorbe", DbType="Time")]
		public System.Nullable<System.TimeSpan> vremeBorbe
		{
			get
			{
				return this._vremeBorbe;
			}
			set
			{
				if ((this._vremeBorbe != value))
				{
					this.OnvremeBorbeChanging(value);
					this.SendPropertyChanging();
					this._vremeBorbe = value;
					this.SendPropertyChanged("vremeBorbe");
					this.OnvremeBorbeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tipBorbe", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string tipBorbe
		{
			get
			{
				return this._tipBorbe;
			}
			set
			{
				if ((this._tipBorbe != value))
				{
					this.OntipBorbeChanging(value);
					this.SendPropertyChanging();
					this._tipBorbe = value;
					this.SendPropertyChanged("tipBorbe");
					this.OntipBorbeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tezinskaKategorija", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string tezinskaKategorija
		{
			get
			{
				return this._tezinskaKategorija;
			}
			set
			{
				if ((this._tezinskaKategorija != value))
				{
					this.OntezinskaKategorijaChanging(value);
					this.SendPropertyChanging();
					this._tezinskaKategorija = value;
					this.SendPropertyChanged("tezinskaKategorija");
					this.OntezinskaKategorijaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cena", DbType="Int NOT NULL")]
		public int Cena
		{
			get
			{
				return this._Cena;
			}
			set
			{
				if ((this._Cena != value))
				{
					this.OnCenaChanging(value);
					this.SendPropertyChanging();
					this._Cena = value;
					this.SendPropertyChanged("Cena");
					this.OnCenaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Napomene", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Napomene
		{
			get
			{
				return this._Napomene;
			}
			set
			{
				if ((this._Napomene != value))
				{
					this.OnNapomeneChanging(value);
					this.SendPropertyChanging();
					this._Napomene = value;
					this.SendPropertyChanged("Napomene");
					this.OnNapomeneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDAdministratora", DbType="Int NOT NULL")]
		public int IDAdministratora
		{
			get
			{
				return this._IDAdministratora;
			}
			set
			{
				if ((this._IDAdministratora != value))
				{
					if (this._Administrator.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDAdministratoraChanging(value);
					this.SendPropertyChanging();
					this._IDAdministratora = value;
					this.SendPropertyChanged("IDAdministratora");
					this.OnIDAdministratoraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDSportskoBorilačkogKluba", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string IDSportskoBorilačkogKluba
		{
			get
			{
				return this._IDSportskoBorilačkogKluba;
			}
			set
			{
				if ((this._IDSportskoBorilačkogKluba != value))
				{
					if (this._SportskoBorilačkiKlub.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDSportskoBorilačkogKlubaChanging(value);
					this.SendPropertyChanging();
					this._IDSportskoBorilačkogKluba = value;
					this.SendPropertyChanged("IDSportskoBorilačkogKluba");
					this.OnIDSportskoBorilačkogKlubaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrviOdgovor", DbType="Bit NOT NULL")]
		public bool PrviOdgovor
		{
			get
			{
				return this._PrviOdgovor;
			}
			set
			{
				if ((this._PrviOdgovor != value))
				{
					this.OnPrviOdgovorChanging(value);
					this.SendPropertyChanging();
					this._PrviOdgovor = value;
					this.SendPropertyChanged("PrviOdgovor");
					this.OnPrviOdgovorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DrugiOdgovor", DbType="Bit NOT NULL")]
		public bool DrugiOdgovor
		{
			get
			{
				return this._DrugiOdgovor;
			}
			set
			{
				if ((this._DrugiOdgovor != value))
				{
					this.OnDrugiOdgovorChanging(value);
					this.SendPropertyChanging();
					this._DrugiOdgovor = value;
					this.SendPropertyChanged("DrugiOdgovor");
					this.OnDrugiOdgovorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StanjePredloga", DbType="Bit NOT NULL")]
		public bool StanjePredloga
		{
			get
			{
				return this._StanjePredloga;
			}
			set
			{
				if ((this._StanjePredloga != value))
				{
					this.OnStanjePredlogaChanging(value);
					this.SendPropertyChanging();
					this._StanjePredloga = value;
					this.SendPropertyChanged("StanjePredloga");
					this.OnStanjePredlogaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Administrator_PredlogBorbe", Storage="_Administrator", ThisKey="IDAdministratora", OtherKey="IDAdministratora", IsForeignKey=true)]
		public Administrator Administrator
		{
			get
			{
				return this._Administrator.Entity;
			}
			set
			{
				Administrator previousValue = this._Administrator.Entity;
				if (((previousValue != value) 
							|| (this._Administrator.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Administrator.Entity = null;
						previousValue.PredlogBorbes.Remove(this);
					}
					this._Administrator.Entity = value;
					if ((value != null))
					{
						value.PredlogBorbes.Add(this);
						this._IDAdministratora = value.IDAdministratora;
					}
					else
					{
						this._IDAdministratora = default(int);
					}
					this.SendPropertyChanged("Administrator");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Korisnik_PredlogBorbe", Storage="_Korisnik", ThisKey="IDKorisnika1", OtherKey="IDKorisnika", IsForeignKey=true)]
		public Korisnik Korisnik
		{
			get
			{
				return this._Korisnik.Entity;
			}
			set
			{
				Korisnik previousValue = this._Korisnik.Entity;
				if (((previousValue != value) 
							|| (this._Korisnik.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Korisnik.Entity = null;
						previousValue.PredlogBorbes.Remove(this);
					}
					this._Korisnik.Entity = value;
					if ((value != null))
					{
						value.PredlogBorbes.Add(this);
						this._IDKorisnika1 = value.IDKorisnika;
					}
					else
					{
						this._IDKorisnika1 = default(int);
					}
					this.SendPropertyChanged("Korisnik");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Korisnik_PredlogBorbe1", Storage="_Korisnik1", ThisKey="IDKorisnika2", OtherKey="IDKorisnika", IsForeignKey=true)]
		public Korisnik Korisnik1
		{
			get
			{
				return this._Korisnik1.Entity;
			}
			set
			{
				Korisnik previousValue = this._Korisnik1.Entity;
				if (((previousValue != value) 
							|| (this._Korisnik1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Korisnik1.Entity = null;
						previousValue.PredlogBorbes1.Remove(this);
					}
					this._Korisnik1.Entity = value;
					if ((value != null))
					{
						value.PredlogBorbes1.Add(this);
						this._IDKorisnika2 = value.IDKorisnika;
					}
					else
					{
						this._IDKorisnika2 = default(int);
					}
					this.SendPropertyChanged("Korisnik1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SportskoBorilačkiKlub_PredlogBorbe", Storage="_SportskoBorilačkiKlub", ThisKey="IDSportskoBorilačkogKluba", OtherKey="IDSportskoBorilačkogKluba", IsForeignKey=true)]
		public SportskoBorilačkiKlub SportskoBorilačkiKlub
		{
			get
			{
				return this._SportskoBorilačkiKlub.Entity;
			}
			set
			{
				SportskoBorilačkiKlub previousValue = this._SportskoBorilačkiKlub.Entity;
				if (((previousValue != value) 
							|| (this._SportskoBorilačkiKlub.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SportskoBorilačkiKlub.Entity = null;
						previousValue.PredlogBorbes.Remove(this);
					}
					this._SportskoBorilačkiKlub.Entity = value;
					if ((value != null))
					{
						value.PredlogBorbes.Add(this);
						this._IDSportskoBorilačkogKluba = value.IDSportskoBorilačkogKluba;
					}
					else
					{
						this._IDSportskoBorilačkogKluba = default(string);
					}
					this.SendPropertyChanged("SportskoBorilačkiKlub");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Pristup")]
	public partial class Pristup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _IDUsera;
		
		private string _Username;
		
		private string _Password;
		
		private int _IDUloge;
		
		private EntityRef<Uloge> _Uloge;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDUseraChanging(string value);
    partial void OnIDUseraChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnIDUlogeChanging(int value);
    partial void OnIDUlogeChanged();
    #endregion
		
		public Pristup()
		{
			this._Uloge = default(EntityRef<Uloge>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDUsera", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string IDUsera
		{
			get
			{
				return this._IDUsera;
			}
			set
			{
				if ((this._IDUsera != value))
				{
					this.OnIDUseraChanging(value);
					this.SendPropertyChanging();
					this._IDUsera = value;
					this.SendPropertyChanged("IDUsera");
					this.OnIDUseraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDUloge", DbType="Int NOT NULL")]
		public int IDUloge
		{
			get
			{
				return this._IDUloge;
			}
			set
			{
				if ((this._IDUloge != value))
				{
					if (this._Uloge.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDUlogeChanging(value);
					this.SendPropertyChanging();
					this._IDUloge = value;
					this.SendPropertyChanged("IDUloge");
					this.OnIDUlogeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Uloge_Pristup", Storage="_Uloge", ThisKey="IDUloge", OtherKey="IDUloge", IsForeignKey=true)]
		public Uloge Uloge
		{
			get
			{
				return this._Uloge.Entity;
			}
			set
			{
				Uloge previousValue = this._Uloge.Entity;
				if (((previousValue != value) 
							|| (this._Uloge.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Uloge.Entity = null;
						previousValue.Pristups.Remove(this);
					}
					this._Uloge.Entity = value;
					if ((value != null))
					{
						value.Pristups.Add(this);
						this._IDUloge = value.IDUloge;
					}
					else
					{
						this._IDUloge = default(int);
					}
					this.SendPropertyChanged("Uloge");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Prodavac")]
	public partial class Prodavac : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDProdavac;
		
		private string _usernameProd;
		
		private string _passwordProd;
		
		private string _Ime;
		
		private string _Prezime;
		
		private int _IDUloge;
		
		private EntitySet<UnosUMagacin> _UnosUMagacins;
		
		private EntityRef<Uloge> _Uloge;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDProdavacChanging(int value);
    partial void OnIDProdavacChanged();
    partial void OnusernameProdChanging(string value);
    partial void OnusernameProdChanged();
    partial void OnpasswordProdChanging(string value);
    partial void OnpasswordProdChanged();
    partial void OnImeChanging(string value);
    partial void OnImeChanged();
    partial void OnPrezimeChanging(string value);
    partial void OnPrezimeChanged();
    partial void OnIDUlogeChanging(int value);
    partial void OnIDUlogeChanged();
    #endregion
		
		public Prodavac()
		{
			this._UnosUMagacins = new EntitySet<UnosUMagacin>(new Action<UnosUMagacin>(this.attach_UnosUMagacins), new Action<UnosUMagacin>(this.detach_UnosUMagacins));
			this._Uloge = default(EntityRef<Uloge>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDProdavac", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDProdavac
		{
			get
			{
				return this._IDProdavac;
			}
			set
			{
				if ((this._IDProdavac != value))
				{
					this.OnIDProdavacChanging(value);
					this.SendPropertyChanging();
					this._IDProdavac = value;
					this.SendPropertyChanged("IDProdavac");
					this.OnIDProdavacChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_usernameProd", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string usernameProd
		{
			get
			{
				return this._usernameProd;
			}
			set
			{
				if ((this._usernameProd != value))
				{
					this.OnusernameProdChanging(value);
					this.SendPropertyChanging();
					this._usernameProd = value;
					this.SendPropertyChanged("usernameProd");
					this.OnusernameProdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_passwordProd", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string passwordProd
		{
			get
			{
				return this._passwordProd;
			}
			set
			{
				if ((this._passwordProd != value))
				{
					this.OnpasswordProdChanging(value);
					this.SendPropertyChanging();
					this._passwordProd = value;
					this.SendPropertyChanged("passwordProd");
					this.OnpasswordProdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ime", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Ime
		{
			get
			{
				return this._Ime;
			}
			set
			{
				if ((this._Ime != value))
				{
					this.OnImeChanging(value);
					this.SendPropertyChanging();
					this._Ime = value;
					this.SendPropertyChanged("Ime");
					this.OnImeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prezime", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Prezime
		{
			get
			{
				return this._Prezime;
			}
			set
			{
				if ((this._Prezime != value))
				{
					this.OnPrezimeChanging(value);
					this.SendPropertyChanging();
					this._Prezime = value;
					this.SendPropertyChanged("Prezime");
					this.OnPrezimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDUloge", DbType="Int NOT NULL")]
		public int IDUloge
		{
			get
			{
				return this._IDUloge;
			}
			set
			{
				if ((this._IDUloge != value))
				{
					if (this._Uloge.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDUlogeChanging(value);
					this.SendPropertyChanging();
					this._IDUloge = value;
					this.SendPropertyChanged("IDUloge");
					this.OnIDUlogeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Prodavac_UnosUMagacin", Storage="_UnosUMagacins", ThisKey="IDProdavac", OtherKey="IDProdavac")]
		public EntitySet<UnosUMagacin> UnosUMagacins
		{
			get
			{
				return this._UnosUMagacins;
			}
			set
			{
				this._UnosUMagacins.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Uloge_Prodavac", Storage="_Uloge", ThisKey="IDUloge", OtherKey="IDUloge", IsForeignKey=true)]
		public Uloge Uloge
		{
			get
			{
				return this._Uloge.Entity;
			}
			set
			{
				Uloge previousValue = this._Uloge.Entity;
				if (((previousValue != value) 
							|| (this._Uloge.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Uloge.Entity = null;
						previousValue.Prodavacs.Remove(this);
					}
					this._Uloge.Entity = value;
					if ((value != null))
					{
						value.Prodavacs.Add(this);
						this._IDUloge = value.IDUloge;
					}
					else
					{
						this._IDUloge = default(int);
					}
					this.SendPropertyChanged("Uloge");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UnosUMagacins(UnosUMagacin entity)
		{
			this.SendPropertyChanging();
			entity.Prodavac = this;
		}
		
		private void detach_UnosUMagacins(UnosUMagacin entity)
		{
			this.SendPropertyChanging();
			entity.Prodavac = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Proizvod")]
	public partial class Proizvod : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SifraProizvoda;
		
		private string _Naziv;
		
		private int _Kolicina;
		
		private string _Opis;
		
		private int _Cena;
		
		private string _Proizvodjac;
		
		private System.Nullable<int> _Popust;
		
		private int _IDKatalog;
		
		private string _Slika;
		
		private string _AltSlika;
		
		private System.Nullable<double> _UkupnaCena;
		
		private EntitySet<Magacin> _Magacins;
		
		private EntitySet<StavkaNarudzbenice> _StavkaNarudzbenices;
		
		private EntitySet<StavkaRacuna> _StavkaRacunas;
		
		private EntityRef<Katalog> _Katalog;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSifraProizvodaChanging(string value);
    partial void OnSifraProizvodaChanged();
    partial void OnNazivChanging(string value);
    partial void OnNazivChanged();
    partial void OnKolicinaChanging(int value);
    partial void OnKolicinaChanged();
    partial void OnOpisChanging(string value);
    partial void OnOpisChanged();
    partial void OnCenaChanging(int value);
    partial void OnCenaChanged();
    partial void OnProizvodjacChanging(string value);
    partial void OnProizvodjacChanged();
    partial void OnPopustChanging(System.Nullable<int> value);
    partial void OnPopustChanged();
    partial void OnIDKatalogChanging(int value);
    partial void OnIDKatalogChanged();
    partial void OnSlikaChanging(string value);
    partial void OnSlikaChanged();
    partial void OnAltSlikaChanging(string value);
    partial void OnAltSlikaChanged();
    partial void OnUkupnaCenaChanging(System.Nullable<double> value);
    partial void OnUkupnaCenaChanged();
    #endregion
		
		public Proizvod()
		{
			this._Magacins = new EntitySet<Magacin>(new Action<Magacin>(this.attach_Magacins), new Action<Magacin>(this.detach_Magacins));
			this._StavkaNarudzbenices = new EntitySet<StavkaNarudzbenice>(new Action<StavkaNarudzbenice>(this.attach_StavkaNarudzbenices), new Action<StavkaNarudzbenice>(this.detach_StavkaNarudzbenices));
			this._StavkaRacunas = new EntitySet<StavkaRacuna>(new Action<StavkaRacuna>(this.attach_StavkaRacunas), new Action<StavkaRacuna>(this.detach_StavkaRacunas));
			this._Katalog = default(EntityRef<Katalog>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SifraProizvoda", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SifraProizvoda
		{
			get
			{
				return this._SifraProizvoda;
			}
			set
			{
				if ((this._SifraProizvoda != value))
				{
					this.OnSifraProizvodaChanging(value);
					this.SendPropertyChanging();
					this._SifraProizvoda = value;
					this.SendPropertyChanged("SifraProizvoda");
					this.OnSifraProizvodaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Naziv", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Naziv
		{
			get
			{
				return this._Naziv;
			}
			set
			{
				if ((this._Naziv != value))
				{
					this.OnNazivChanging(value);
					this.SendPropertyChanging();
					this._Naziv = value;
					this.SendPropertyChanged("Naziv");
					this.OnNazivChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kolicina", DbType="Int NOT NULL")]
		public int Kolicina
		{
			get
			{
				return this._Kolicina;
			}
			set
			{
				if ((this._Kolicina != value))
				{
					this.OnKolicinaChanging(value);
					this.SendPropertyChanging();
					this._Kolicina = value;
					this.SendPropertyChanged("Kolicina");
					this.OnKolicinaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Opis", DbType="NVarChar(MAX)")]
		public string Opis
		{
			get
			{
				return this._Opis;
			}
			set
			{
				if ((this._Opis != value))
				{
					this.OnOpisChanging(value);
					this.SendPropertyChanging();
					this._Opis = value;
					this.SendPropertyChanged("Opis");
					this.OnOpisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cena", DbType="Int NOT NULL")]
		public int Cena
		{
			get
			{
				return this._Cena;
			}
			set
			{
				if ((this._Cena != value))
				{
					this.OnCenaChanging(value);
					this.SendPropertyChanging();
					this._Cena = value;
					this.SendPropertyChanged("Cena");
					this.OnCenaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Proizvodjac", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Proizvodjac
		{
			get
			{
				return this._Proizvodjac;
			}
			set
			{
				if ((this._Proizvodjac != value))
				{
					this.OnProizvodjacChanging(value);
					this.SendPropertyChanging();
					this._Proizvodjac = value;
					this.SendPropertyChanged("Proizvodjac");
					this.OnProizvodjacChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Popust", DbType="Int")]
		public System.Nullable<int> Popust
		{
			get
			{
				return this._Popust;
			}
			set
			{
				if ((this._Popust != value))
				{
					this.OnPopustChanging(value);
					this.SendPropertyChanging();
					this._Popust = value;
					this.SendPropertyChanged("Popust");
					this.OnPopustChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDKatalog", DbType="Int NOT NULL")]
		public int IDKatalog
		{
			get
			{
				return this._IDKatalog;
			}
			set
			{
				if ((this._IDKatalog != value))
				{
					if (this._Katalog.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDKatalogChanging(value);
					this.SendPropertyChanging();
					this._IDKatalog = value;
					this.SendPropertyChanged("IDKatalog");
					this.OnIDKatalogChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Slika", DbType="NVarChar(MAX)")]
		public string Slika
		{
			get
			{
				return this._Slika;
			}
			set
			{
				if ((this._Slika != value))
				{
					this.OnSlikaChanging(value);
					this.SendPropertyChanging();
					this._Slika = value;
					this.SendPropertyChanged("Slika");
					this.OnSlikaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AltSlika", DbType="NVarChar(MAX)")]
		public string AltSlika
		{
			get
			{
				return this._AltSlika;
			}
			set
			{
				if ((this._AltSlika != value))
				{
					this.OnAltSlikaChanging(value);
					this.SendPropertyChanging();
					this._AltSlika = value;
					this.SendPropertyChanged("AltSlika");
					this.OnAltSlikaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UkupnaCena", DbType="Float")]
		public System.Nullable<double> UkupnaCena
		{
			get
			{
				return this._UkupnaCena;
			}
			set
			{
				if ((this._UkupnaCena != value))
				{
					this.OnUkupnaCenaChanging(value);
					this.SendPropertyChanging();
					this._UkupnaCena = value;
					this.SendPropertyChanged("UkupnaCena");
					this.OnUkupnaCenaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Proizvod_Magacin", Storage="_Magacins", ThisKey="SifraProizvoda", OtherKey="SifraProizvoda")]
		public EntitySet<Magacin> Magacins
		{
			get
			{
				return this._Magacins;
			}
			set
			{
				this._Magacins.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Proizvod_StavkaNarudzbenice", Storage="_StavkaNarudzbenices", ThisKey="SifraProizvoda", OtherKey="SifraProizvoda")]
		public EntitySet<StavkaNarudzbenice> StavkaNarudzbenices
		{
			get
			{
				return this._StavkaNarudzbenices;
			}
			set
			{
				this._StavkaNarudzbenices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Proizvod_StavkaRacuna", Storage="_StavkaRacunas", ThisKey="SifraProizvoda", OtherKey="SifraProizvoda")]
		public EntitySet<StavkaRacuna> StavkaRacunas
		{
			get
			{
				return this._StavkaRacunas;
			}
			set
			{
				this._StavkaRacunas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Katalog_Proizvod", Storage="_Katalog", ThisKey="IDKatalog", OtherKey="IDKatalog", IsForeignKey=true)]
		public Katalog Katalog
		{
			get
			{
				return this._Katalog.Entity;
			}
			set
			{
				Katalog previousValue = this._Katalog.Entity;
				if (((previousValue != value) 
							|| (this._Katalog.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Katalog.Entity = null;
						previousValue.Proizvods.Remove(this);
					}
					this._Katalog.Entity = value;
					if ((value != null))
					{
						value.Proizvods.Add(this);
						this._IDKatalog = value.IDKatalog;
					}
					else
					{
						this._IDKatalog = default(int);
					}
					this.SendPropertyChanged("Katalog");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Magacins(Magacin entity)
		{
			this.SendPropertyChanging();
			entity.Proizvod = this;
		}
		
		private void detach_Magacins(Magacin entity)
		{
			this.SendPropertyChanging();
			entity.Proizvod = null;
		}
		
		private void attach_StavkaNarudzbenices(StavkaNarudzbenice entity)
		{
			this.SendPropertyChanging();
			entity.Proizvod = this;
		}
		
		private void detach_StavkaNarudzbenices(StavkaNarudzbenice entity)
		{
			this.SendPropertyChanging();
			entity.Proizvod = null;
		}
		
		private void attach_StavkaRacunas(StavkaRacuna entity)
		{
			this.SendPropertyChanging();
			entity.Proizvod = this;
		}
		
		private void detach_StavkaRacunas(StavkaRacuna entity)
		{
			this.SendPropertyChanging();
			entity.Proizvod = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Racun")]
	public partial class Racun : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDRacuna;
		
		private System.DateTime _Datum;
		
		private System.TimeSpan _Vreme;
		
		private decimal _UkVrednost;
		
		private bool _Obradjen;
		
		private bool _Storniran;
		
		private int _IDKorisnik;
		
		private EntitySet<StavkaRacuna> _StavkaRacunas;
		
		private EntityRef<Korisnik> _Korisnik;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDRacunaChanging(int value);
    partial void OnIDRacunaChanged();
    partial void OnDatumChanging(System.DateTime value);
    partial void OnDatumChanged();
    partial void OnVremeChanging(System.TimeSpan value);
    partial void OnVremeChanged();
    partial void OnUkVrednostChanging(decimal value);
    partial void OnUkVrednostChanged();
    partial void OnObradjenChanging(bool value);
    partial void OnObradjenChanged();
    partial void OnStorniranChanging(bool value);
    partial void OnStorniranChanged();
    partial void OnIDKorisnikChanging(int value);
    partial void OnIDKorisnikChanged();
    #endregion
		
		public Racun()
		{
			this._StavkaRacunas = new EntitySet<StavkaRacuna>(new Action<StavkaRacuna>(this.attach_StavkaRacunas), new Action<StavkaRacuna>(this.detach_StavkaRacunas));
			this._Korisnik = default(EntityRef<Korisnik>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDRacuna", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDRacuna
		{
			get
			{
				return this._IDRacuna;
			}
			set
			{
				if ((this._IDRacuna != value))
				{
					this.OnIDRacunaChanging(value);
					this.SendPropertyChanging();
					this._IDRacuna = value;
					this.SendPropertyChanged("IDRacuna");
					this.OnIDRacunaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Datum", DbType="Date NOT NULL")]
		public System.DateTime Datum
		{
			get
			{
				return this._Datum;
			}
			set
			{
				if ((this._Datum != value))
				{
					this.OnDatumChanging(value);
					this.SendPropertyChanging();
					this._Datum = value;
					this.SendPropertyChanged("Datum");
					this.OnDatumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vreme", DbType="Time NOT NULL")]
		public System.TimeSpan Vreme
		{
			get
			{
				return this._Vreme;
			}
			set
			{
				if ((this._Vreme != value))
				{
					this.OnVremeChanging(value);
					this.SendPropertyChanging();
					this._Vreme = value;
					this.SendPropertyChanged("Vreme");
					this.OnVremeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UkVrednost", DbType="Decimal(10,2) NOT NULL")]
		public decimal UkVrednost
		{
			get
			{
				return this._UkVrednost;
			}
			set
			{
				if ((this._UkVrednost != value))
				{
					this.OnUkVrednostChanging(value);
					this.SendPropertyChanging();
					this._UkVrednost = value;
					this.SendPropertyChanged("UkVrednost");
					this.OnUkVrednostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Obradjen", DbType="Bit NOT NULL")]
		public bool Obradjen
		{
			get
			{
				return this._Obradjen;
			}
			set
			{
				if ((this._Obradjen != value))
				{
					this.OnObradjenChanging(value);
					this.SendPropertyChanging();
					this._Obradjen = value;
					this.SendPropertyChanged("Obradjen");
					this.OnObradjenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Storniran", DbType="Bit NOT NULL")]
		public bool Storniran
		{
			get
			{
				return this._Storniran;
			}
			set
			{
				if ((this._Storniran != value))
				{
					this.OnStorniranChanging(value);
					this.SendPropertyChanging();
					this._Storniran = value;
					this.SendPropertyChanged("Storniran");
					this.OnStorniranChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDKorisnik", DbType="Int NOT NULL")]
		public int IDKorisnik
		{
			get
			{
				return this._IDKorisnik;
			}
			set
			{
				if ((this._IDKorisnik != value))
				{
					if (this._Korisnik.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDKorisnikChanging(value);
					this.SendPropertyChanging();
					this._IDKorisnik = value;
					this.SendPropertyChanged("IDKorisnik");
					this.OnIDKorisnikChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Racun_StavkaRacuna", Storage="_StavkaRacunas", ThisKey="IDRacuna", OtherKey="IDRacuna")]
		public EntitySet<StavkaRacuna> StavkaRacunas
		{
			get
			{
				return this._StavkaRacunas;
			}
			set
			{
				this._StavkaRacunas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Korisnik_Racun", Storage="_Korisnik", ThisKey="IDKorisnik", OtherKey="IDKorisnika", IsForeignKey=true)]
		public Korisnik Korisnik
		{
			get
			{
				return this._Korisnik.Entity;
			}
			set
			{
				Korisnik previousValue = this._Korisnik.Entity;
				if (((previousValue != value) 
							|| (this._Korisnik.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Korisnik.Entity = null;
						previousValue.Racuns.Remove(this);
					}
					this._Korisnik.Entity = value;
					if ((value != null))
					{
						value.Racuns.Add(this);
						this._IDKorisnik = value.IDKorisnika;
					}
					else
					{
						this._IDKorisnik = default(int);
					}
					this.SendPropertyChanged("Korisnik");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_StavkaRacunas(StavkaRacuna entity)
		{
			this.SendPropertyChanging();
			entity.Racun = this;
		}
		
		private void detach_StavkaRacunas(StavkaRacuna entity)
		{
			this.SendPropertyChanging();
			entity.Racun = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Rezervacija")]
	public partial class Rezervacija : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDRezervacije;
		
		private string _IDSportskoBorilačkogKluba;
		
		private System.DateTime _Datum;
		
		private int _IDAdministratora;
		
		private EntityRef<Administrator> _Administrator;
		
		private EntityRef<SportskoBorilačkiKlub> _SportskoBorilačkiKlub;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDRezervacijeChanging(int value);
    partial void OnIDRezervacijeChanged();
    partial void OnIDSportskoBorilačkogKlubaChanging(string value);
    partial void OnIDSportskoBorilačkogKlubaChanged();
    partial void OnDatumChanging(System.DateTime value);
    partial void OnDatumChanged();
    partial void OnIDAdministratoraChanging(int value);
    partial void OnIDAdministratoraChanged();
    #endregion
		
		public Rezervacija()
		{
			this._Administrator = default(EntityRef<Administrator>);
			this._SportskoBorilačkiKlub = default(EntityRef<SportskoBorilačkiKlub>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDRezervacije", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDRezervacije
		{
			get
			{
				return this._IDRezervacije;
			}
			set
			{
				if ((this._IDRezervacije != value))
				{
					this.OnIDRezervacijeChanging(value);
					this.SendPropertyChanging();
					this._IDRezervacije = value;
					this.SendPropertyChanged("IDRezervacije");
					this.OnIDRezervacijeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDSportskoBorilačkogKluba", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string IDSportskoBorilačkogKluba
		{
			get
			{
				return this._IDSportskoBorilačkogKluba;
			}
			set
			{
				if ((this._IDSportskoBorilačkogKluba != value))
				{
					if (this._SportskoBorilačkiKlub.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDSportskoBorilačkogKlubaChanging(value);
					this.SendPropertyChanging();
					this._IDSportskoBorilačkogKluba = value;
					this.SendPropertyChanged("IDSportskoBorilačkogKluba");
					this.OnIDSportskoBorilačkogKlubaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Datum", DbType="Date NOT NULL")]
		public System.DateTime Datum
		{
			get
			{
				return this._Datum;
			}
			set
			{
				if ((this._Datum != value))
				{
					this.OnDatumChanging(value);
					this.SendPropertyChanging();
					this._Datum = value;
					this.SendPropertyChanged("Datum");
					this.OnDatumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDAdministratora", DbType="Int NOT NULL")]
		public int IDAdministratora
		{
			get
			{
				return this._IDAdministratora;
			}
			set
			{
				if ((this._IDAdministratora != value))
				{
					if (this._Administrator.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDAdministratoraChanging(value);
					this.SendPropertyChanging();
					this._IDAdministratora = value;
					this.SendPropertyChanged("IDAdministratora");
					this.OnIDAdministratoraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Administrator_Rezervacija", Storage="_Administrator", ThisKey="IDAdministratora", OtherKey="IDAdministratora", IsForeignKey=true)]
		public Administrator Administrator
		{
			get
			{
				return this._Administrator.Entity;
			}
			set
			{
				Administrator previousValue = this._Administrator.Entity;
				if (((previousValue != value) 
							|| (this._Administrator.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Administrator.Entity = null;
						previousValue.Rezervacijas.Remove(this);
					}
					this._Administrator.Entity = value;
					if ((value != null))
					{
						value.Rezervacijas.Add(this);
						this._IDAdministratora = value.IDAdministratora;
					}
					else
					{
						this._IDAdministratora = default(int);
					}
					this.SendPropertyChanged("Administrator");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SportskoBorilačkiKlub_Rezervacija", Storage="_SportskoBorilačkiKlub", ThisKey="IDSportskoBorilačkogKluba", OtherKey="IDSportskoBorilačkogKluba", IsForeignKey=true)]
		public SportskoBorilačkiKlub SportskoBorilačkiKlub
		{
			get
			{
				return this._SportskoBorilačkiKlub.Entity;
			}
			set
			{
				SportskoBorilačkiKlub previousValue = this._SportskoBorilačkiKlub.Entity;
				if (((previousValue != value) 
							|| (this._SportskoBorilačkiKlub.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SportskoBorilačkiKlub.Entity = null;
						previousValue.Rezervacijas.Remove(this);
					}
					this._SportskoBorilačkiKlub.Entity = value;
					if ((value != null))
					{
						value.Rezervacijas.Add(this);
						this._IDSportskoBorilačkogKluba = value.IDSportskoBorilačkogKluba;
					}
					else
					{
						this._IDSportskoBorilačkogKluba = default(string);
					}
					this.SendPropertyChanged("SportskoBorilačkiKlub");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SportskoBorilačkiKlub")]
	public partial class SportskoBorilačkiKlub : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _IDSportskoBorilačkogKluba;
		
		private string _Naziv;
		
		private string _Adresa;
		
		private string _Grad;
		
		private string _email;
		
		private EntitySet<Ponuda> _Ponudas;
		
		private EntitySet<PredlogBorbe> _PredlogBorbes;
		
		private EntitySet<Rezervacija> _Rezervacijas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDSportskoBorilačkogKlubaChanging(string value);
    partial void OnIDSportskoBorilačkogKlubaChanged();
    partial void OnNazivChanging(string value);
    partial void OnNazivChanged();
    partial void OnAdresaChanging(string value);
    partial void OnAdresaChanged();
    partial void OnGradChanging(string value);
    partial void OnGradChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    #endregion
		
		public SportskoBorilačkiKlub()
		{
			this._Ponudas = new EntitySet<Ponuda>(new Action<Ponuda>(this.attach_Ponudas), new Action<Ponuda>(this.detach_Ponudas));
			this._PredlogBorbes = new EntitySet<PredlogBorbe>(new Action<PredlogBorbe>(this.attach_PredlogBorbes), new Action<PredlogBorbe>(this.detach_PredlogBorbes));
			this._Rezervacijas = new EntitySet<Rezervacija>(new Action<Rezervacija>(this.attach_Rezervacijas), new Action<Rezervacija>(this.detach_Rezervacijas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDSportskoBorilačkogKluba", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string IDSportskoBorilačkogKluba
		{
			get
			{
				return this._IDSportskoBorilačkogKluba;
			}
			set
			{
				if ((this._IDSportskoBorilačkogKluba != value))
				{
					this.OnIDSportskoBorilačkogKlubaChanging(value);
					this.SendPropertyChanging();
					this._IDSportskoBorilačkogKluba = value;
					this.SendPropertyChanged("IDSportskoBorilačkogKluba");
					this.OnIDSportskoBorilačkogKlubaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Naziv", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Naziv
		{
			get
			{
				return this._Naziv;
			}
			set
			{
				if ((this._Naziv != value))
				{
					this.OnNazivChanging(value);
					this.SendPropertyChanging();
					this._Naziv = value;
					this.SendPropertyChanged("Naziv");
					this.OnNazivChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Adresa", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Adresa
		{
			get
			{
				return this._Adresa;
			}
			set
			{
				if ((this._Adresa != value))
				{
					this.OnAdresaChanging(value);
					this.SendPropertyChanging();
					this._Adresa = value;
					this.SendPropertyChanged("Adresa");
					this.OnAdresaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Grad", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Grad
		{
			get
			{
				return this._Grad;
			}
			set
			{
				if ((this._Grad != value))
				{
					this.OnGradChanging(value);
					this.SendPropertyChanging();
					this._Grad = value;
					this.SendPropertyChanged("Grad");
					this.OnGradChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="NVarChar(80) NOT NULL", CanBeNull=false)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SportskoBorilačkiKlub_Ponuda", Storage="_Ponudas", ThisKey="IDSportskoBorilačkogKluba", OtherKey="IDSportskoBorilackogKluba")]
		public EntitySet<Ponuda> Ponudas
		{
			get
			{
				return this._Ponudas;
			}
			set
			{
				this._Ponudas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SportskoBorilačkiKlub_PredlogBorbe", Storage="_PredlogBorbes", ThisKey="IDSportskoBorilačkogKluba", OtherKey="IDSportskoBorilačkogKluba")]
		public EntitySet<PredlogBorbe> PredlogBorbes
		{
			get
			{
				return this._PredlogBorbes;
			}
			set
			{
				this._PredlogBorbes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SportskoBorilačkiKlub_Rezervacija", Storage="_Rezervacijas", ThisKey="IDSportskoBorilačkogKluba", OtherKey="IDSportskoBorilačkogKluba")]
		public EntitySet<Rezervacija> Rezervacijas
		{
			get
			{
				return this._Rezervacijas;
			}
			set
			{
				this._Rezervacijas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Ponudas(Ponuda entity)
		{
			this.SendPropertyChanging();
			entity.SportskoBorilačkiKlub = this;
		}
		
		private void detach_Ponudas(Ponuda entity)
		{
			this.SendPropertyChanging();
			entity.SportskoBorilačkiKlub = null;
		}
		
		private void attach_PredlogBorbes(PredlogBorbe entity)
		{
			this.SendPropertyChanging();
			entity.SportskoBorilačkiKlub = this;
		}
		
		private void detach_PredlogBorbes(PredlogBorbe entity)
		{
			this.SendPropertyChanging();
			entity.SportskoBorilačkiKlub = null;
		}
		
		private void attach_Rezervacijas(Rezervacija entity)
		{
			this.SendPropertyChanging();
			entity.SportskoBorilačkiKlub = this;
		}
		
		private void detach_Rezervacijas(Rezervacija entity)
		{
			this.SendPropertyChanging();
			entity.SportskoBorilačkiKlub = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StavkaNarudzbenice")]
	public partial class StavkaNarudzbenice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _IDNarudzbenice;
		
		private string _SifraProizvoda;
		
		private int _RedniBr;
		
		private int _IzabranaKolicina;
		
		private double _UkupnaCenaStavke;
		
		private EntityRef<Narudzbenica> _Narudzbenica;
		
		private EntityRef<Proizvod> _Proizvod;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDNarudzbeniceChanging(string value);
    partial void OnIDNarudzbeniceChanged();
    partial void OnSifraProizvodaChanging(string value);
    partial void OnSifraProizvodaChanged();
    partial void OnRedniBrChanging(int value);
    partial void OnRedniBrChanged();
    partial void OnIzabranaKolicinaChanging(int value);
    partial void OnIzabranaKolicinaChanged();
    partial void OnUkupnaCenaStavkeChanging(double value);
    partial void OnUkupnaCenaStavkeChanged();
    #endregion
		
		public StavkaNarudzbenice()
		{
			this._Narudzbenica = default(EntityRef<Narudzbenica>);
			this._Proizvod = default(EntityRef<Proizvod>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDNarudzbenice", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string IDNarudzbenice
		{
			get
			{
				return this._IDNarudzbenice;
			}
			set
			{
				if ((this._IDNarudzbenice != value))
				{
					if (this._Narudzbenica.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDNarudzbeniceChanging(value);
					this.SendPropertyChanging();
					this._IDNarudzbenice = value;
					this.SendPropertyChanged("IDNarudzbenice");
					this.OnIDNarudzbeniceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SifraProizvoda", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SifraProizvoda
		{
			get
			{
				return this._SifraProizvoda;
			}
			set
			{
				if ((this._SifraProizvoda != value))
				{
					if (this._Proizvod.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSifraProizvodaChanging(value);
					this.SendPropertyChanging();
					this._SifraProizvoda = value;
					this.SendPropertyChanged("SifraProizvoda");
					this.OnSifraProizvodaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RedniBr", DbType="Int NOT NULL")]
		public int RedniBr
		{
			get
			{
				return this._RedniBr;
			}
			set
			{
				if ((this._RedniBr != value))
				{
					this.OnRedniBrChanging(value);
					this.SendPropertyChanging();
					this._RedniBr = value;
					this.SendPropertyChanged("RedniBr");
					this.OnRedniBrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IzabranaKolicina", DbType="Int NOT NULL")]
		public int IzabranaKolicina
		{
			get
			{
				return this._IzabranaKolicina;
			}
			set
			{
				if ((this._IzabranaKolicina != value))
				{
					this.OnIzabranaKolicinaChanging(value);
					this.SendPropertyChanging();
					this._IzabranaKolicina = value;
					this.SendPropertyChanged("IzabranaKolicina");
					this.OnIzabranaKolicinaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UkupnaCenaStavke", DbType="Float NOT NULL")]
		public double UkupnaCenaStavke
		{
			get
			{
				return this._UkupnaCenaStavke;
			}
			set
			{
				if ((this._UkupnaCenaStavke != value))
				{
					this.OnUkupnaCenaStavkeChanging(value);
					this.SendPropertyChanging();
					this._UkupnaCenaStavke = value;
					this.SendPropertyChanged("UkupnaCenaStavke");
					this.OnUkupnaCenaStavkeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Narudzbenica_StavkaNarudzbenice", Storage="_Narudzbenica", ThisKey="IDNarudzbenice", OtherKey="IDNarudzbenice", IsForeignKey=true)]
		public Narudzbenica Narudzbenica
		{
			get
			{
				return this._Narudzbenica.Entity;
			}
			set
			{
				Narudzbenica previousValue = this._Narudzbenica.Entity;
				if (((previousValue != value) 
							|| (this._Narudzbenica.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Narudzbenica.Entity = null;
						previousValue.StavkaNarudzbenices.Remove(this);
					}
					this._Narudzbenica.Entity = value;
					if ((value != null))
					{
						value.StavkaNarudzbenices.Add(this);
						this._IDNarudzbenice = value.IDNarudzbenice;
					}
					else
					{
						this._IDNarudzbenice = default(string);
					}
					this.SendPropertyChanged("Narudzbenica");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Proizvod_StavkaNarudzbenice", Storage="_Proizvod", ThisKey="SifraProizvoda", OtherKey="SifraProizvoda", IsForeignKey=true)]
		public Proizvod Proizvod
		{
			get
			{
				return this._Proizvod.Entity;
			}
			set
			{
				Proizvod previousValue = this._Proizvod.Entity;
				if (((previousValue != value) 
							|| (this._Proizvod.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Proizvod.Entity = null;
						previousValue.StavkaNarudzbenices.Remove(this);
					}
					this._Proizvod.Entity = value;
					if ((value != null))
					{
						value.StavkaNarudzbenices.Add(this);
						this._SifraProizvoda = value.SifraProizvoda;
					}
					else
					{
						this._SifraProizvoda = default(string);
					}
					this.SendPropertyChanged("Proizvod");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StavkaRacuna")]
	public partial class StavkaRacuna : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDRacuna;
		
		private string _SifraProizvoda;
		
		private int _RedniBr;
		
		private int _Kolicina;
		
		private decimal _JedinicnaCena;
		
		private decimal _UkupnaCena;
		
		private EntityRef<Proizvod> _Proizvod;
		
		private EntityRef<Racun> _Racun;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDRacunaChanging(int value);
    partial void OnIDRacunaChanged();
    partial void OnSifraProizvodaChanging(string value);
    partial void OnSifraProizvodaChanged();
    partial void OnRedniBrChanging(int value);
    partial void OnRedniBrChanged();
    partial void OnKolicinaChanging(int value);
    partial void OnKolicinaChanged();
    partial void OnJedinicnaCenaChanging(decimal value);
    partial void OnJedinicnaCenaChanged();
    partial void OnUkupnaCenaChanging(decimal value);
    partial void OnUkupnaCenaChanged();
    #endregion
		
		public StavkaRacuna()
		{
			this._Proizvod = default(EntityRef<Proizvod>);
			this._Racun = default(EntityRef<Racun>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDRacuna", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDRacuna
		{
			get
			{
				return this._IDRacuna;
			}
			set
			{
				if ((this._IDRacuna != value))
				{
					if (this._Racun.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDRacunaChanging(value);
					this.SendPropertyChanging();
					this._IDRacuna = value;
					this.SendPropertyChanged("IDRacuna");
					this.OnIDRacunaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SifraProizvoda", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SifraProizvoda
		{
			get
			{
				return this._SifraProizvoda;
			}
			set
			{
				if ((this._SifraProizvoda != value))
				{
					if (this._Proizvod.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSifraProizvodaChanging(value);
					this.SendPropertyChanging();
					this._SifraProizvoda = value;
					this.SendPropertyChanged("SifraProizvoda");
					this.OnSifraProizvodaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RedniBr", DbType="Int NOT NULL")]
		public int RedniBr
		{
			get
			{
				return this._RedniBr;
			}
			set
			{
				if ((this._RedniBr != value))
				{
					this.OnRedniBrChanging(value);
					this.SendPropertyChanging();
					this._RedniBr = value;
					this.SendPropertyChanged("RedniBr");
					this.OnRedniBrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kolicina", DbType="Int NOT NULL")]
		public int Kolicina
		{
			get
			{
				return this._Kolicina;
			}
			set
			{
				if ((this._Kolicina != value))
				{
					this.OnKolicinaChanging(value);
					this.SendPropertyChanging();
					this._Kolicina = value;
					this.SendPropertyChanged("Kolicina");
					this.OnKolicinaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JedinicnaCena", DbType="Decimal(10,2) NOT NULL")]
		public decimal JedinicnaCena
		{
			get
			{
				return this._JedinicnaCena;
			}
			set
			{
				if ((this._JedinicnaCena != value))
				{
					this.OnJedinicnaCenaChanging(value);
					this.SendPropertyChanging();
					this._JedinicnaCena = value;
					this.SendPropertyChanged("JedinicnaCena");
					this.OnJedinicnaCenaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UkupnaCena", DbType="Decimal(10,2) NOT NULL")]
		public decimal UkupnaCena
		{
			get
			{
				return this._UkupnaCena;
			}
			set
			{
				if ((this._UkupnaCena != value))
				{
					this.OnUkupnaCenaChanging(value);
					this.SendPropertyChanging();
					this._UkupnaCena = value;
					this.SendPropertyChanged("UkupnaCena");
					this.OnUkupnaCenaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Proizvod_StavkaRacuna", Storage="_Proizvod", ThisKey="SifraProizvoda", OtherKey="SifraProizvoda", IsForeignKey=true)]
		public Proizvod Proizvod
		{
			get
			{
				return this._Proizvod.Entity;
			}
			set
			{
				Proizvod previousValue = this._Proizvod.Entity;
				if (((previousValue != value) 
							|| (this._Proizvod.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Proizvod.Entity = null;
						previousValue.StavkaRacunas.Remove(this);
					}
					this._Proizvod.Entity = value;
					if ((value != null))
					{
						value.StavkaRacunas.Add(this);
						this._SifraProizvoda = value.SifraProizvoda;
					}
					else
					{
						this._SifraProizvoda = default(string);
					}
					this.SendPropertyChanged("Proizvod");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Racun_StavkaRacuna", Storage="_Racun", ThisKey="IDRacuna", OtherKey="IDRacuna", IsForeignKey=true)]
		public Racun Racun
		{
			get
			{
				return this._Racun.Entity;
			}
			set
			{
				Racun previousValue = this._Racun.Entity;
				if (((previousValue != value) 
							|| (this._Racun.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Racun.Entity = null;
						previousValue.StavkaRacunas.Remove(this);
					}
					this._Racun.Entity = value;
					if ((value != null))
					{
						value.StavkaRacunas.Add(this);
						this._IDRacuna = value.IDRacuna;
					}
					else
					{
						this._IDRacuna = default(int);
					}
					this.SendPropertyChanged("Racun");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Uloge")]
	public partial class Uloge : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDUloge;
		
		private string _ImeUloge;
		
		private EntitySet<Administrator> _Administrators;
		
		private EntitySet<Korisnik> _Korisniks;
		
		private EntitySet<Pristup> _Pristups;
		
		private EntitySet<Prodavac> _Prodavacs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDUlogeChanging(int value);
    partial void OnIDUlogeChanged();
    partial void OnImeUlogeChanging(string value);
    partial void OnImeUlogeChanged();
    #endregion
		
		public Uloge()
		{
			this._Administrators = new EntitySet<Administrator>(new Action<Administrator>(this.attach_Administrators), new Action<Administrator>(this.detach_Administrators));
			this._Korisniks = new EntitySet<Korisnik>(new Action<Korisnik>(this.attach_Korisniks), new Action<Korisnik>(this.detach_Korisniks));
			this._Pristups = new EntitySet<Pristup>(new Action<Pristup>(this.attach_Pristups), new Action<Pristup>(this.detach_Pristups));
			this._Prodavacs = new EntitySet<Prodavac>(new Action<Prodavac>(this.attach_Prodavacs), new Action<Prodavac>(this.detach_Prodavacs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDUloge", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDUloge
		{
			get
			{
				return this._IDUloge;
			}
			set
			{
				if ((this._IDUloge != value))
				{
					this.OnIDUlogeChanging(value);
					this.SendPropertyChanging();
					this._IDUloge = value;
					this.SendPropertyChanged("IDUloge");
					this.OnIDUlogeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImeUloge", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ImeUloge
		{
			get
			{
				return this._ImeUloge;
			}
			set
			{
				if ((this._ImeUloge != value))
				{
					this.OnImeUlogeChanging(value);
					this.SendPropertyChanging();
					this._ImeUloge = value;
					this.SendPropertyChanged("ImeUloge");
					this.OnImeUlogeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Uloge_Administrator", Storage="_Administrators", ThisKey="IDUloge", OtherKey="IDUloge")]
		public EntitySet<Administrator> Administrators
		{
			get
			{
				return this._Administrators;
			}
			set
			{
				this._Administrators.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Uloge_Korisnik", Storage="_Korisniks", ThisKey="IDUloge", OtherKey="IDUloge")]
		public EntitySet<Korisnik> Korisniks
		{
			get
			{
				return this._Korisniks;
			}
			set
			{
				this._Korisniks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Uloge_Pristup", Storage="_Pristups", ThisKey="IDUloge", OtherKey="IDUloge")]
		public EntitySet<Pristup> Pristups
		{
			get
			{
				return this._Pristups;
			}
			set
			{
				this._Pristups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Uloge_Prodavac", Storage="_Prodavacs", ThisKey="IDUloge", OtherKey="IDUloge")]
		public EntitySet<Prodavac> Prodavacs
		{
			get
			{
				return this._Prodavacs;
			}
			set
			{
				this._Prodavacs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Administrators(Administrator entity)
		{
			this.SendPropertyChanging();
			entity.Uloge = this;
		}
		
		private void detach_Administrators(Administrator entity)
		{
			this.SendPropertyChanging();
			entity.Uloge = null;
		}
		
		private void attach_Korisniks(Korisnik entity)
		{
			this.SendPropertyChanging();
			entity.Uloge = this;
		}
		
		private void detach_Korisniks(Korisnik entity)
		{
			this.SendPropertyChanging();
			entity.Uloge = null;
		}
		
		private void attach_Pristups(Pristup entity)
		{
			this.SendPropertyChanging();
			entity.Uloge = this;
		}
		
		private void detach_Pristups(Pristup entity)
		{
			this.SendPropertyChanging();
			entity.Uloge = null;
		}
		
		private void attach_Prodavacs(Prodavac entity)
		{
			this.SendPropertyChanging();
			entity.Uloge = this;
		}
		
		private void detach_Prodavacs(Prodavac entity)
		{
			this.SendPropertyChanging();
			entity.Uloge = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UnosUMagacin")]
	public partial class UnosUMagacin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDMagacina;
		
		private int _IDProdavac;
		
		private string _SifraProizoda;
		
		private int _SifraUnosa;
		
		private int _KolicinaUnosa;
		
		private System.DateTime _Datum;
		
		private System.TimeSpan _Vreme;
		
		private EntityRef<Magacin> _Magacin;
		
		private EntityRef<Prodavac> _Prodavac;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDMagacinaChanging(int value);
    partial void OnIDMagacinaChanged();
    partial void OnIDProdavacChanging(int value);
    partial void OnIDProdavacChanged();
    partial void OnSifraProizodaChanging(string value);
    partial void OnSifraProizodaChanged();
    partial void OnSifraUnosaChanging(int value);
    partial void OnSifraUnosaChanged();
    partial void OnKolicinaUnosaChanging(int value);
    partial void OnKolicinaUnosaChanged();
    partial void OnDatumChanging(System.DateTime value);
    partial void OnDatumChanged();
    partial void OnVremeChanging(System.TimeSpan value);
    partial void OnVremeChanged();
    #endregion
		
		public UnosUMagacin()
		{
			this._Magacin = default(EntityRef<Magacin>);
			this._Prodavac = default(EntityRef<Prodavac>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDMagacina", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDMagacina
		{
			get
			{
				return this._IDMagacina;
			}
			set
			{
				if ((this._IDMagacina != value))
				{
					if (this._Magacin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDMagacinaChanging(value);
					this.SendPropertyChanging();
					this._IDMagacina = value;
					this.SendPropertyChanged("IDMagacina");
					this.OnIDMagacinaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDProdavac", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDProdavac
		{
			get
			{
				return this._IDProdavac;
			}
			set
			{
				if ((this._IDProdavac != value))
				{
					if (this._Prodavac.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDProdavacChanging(value);
					this.SendPropertyChanging();
					this._IDProdavac = value;
					this.SendPropertyChanged("IDProdavac");
					this.OnIDProdavacChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SifraProizoda", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SifraProizoda
		{
			get
			{
				return this._SifraProizoda;
			}
			set
			{
				if ((this._SifraProizoda != value))
				{
					if (this._Magacin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSifraProizodaChanging(value);
					this.SendPropertyChanging();
					this._SifraProizoda = value;
					this.SendPropertyChanged("SifraProizoda");
					this.OnSifraProizodaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SifraUnosa", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SifraUnosa
		{
			get
			{
				return this._SifraUnosa;
			}
			set
			{
				if ((this._SifraUnosa != value))
				{
					this.OnSifraUnosaChanging(value);
					this.SendPropertyChanging();
					this._SifraUnosa = value;
					this.SendPropertyChanged("SifraUnosa");
					this.OnSifraUnosaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KolicinaUnosa", DbType="Int NOT NULL")]
		public int KolicinaUnosa
		{
			get
			{
				return this._KolicinaUnosa;
			}
			set
			{
				if ((this._KolicinaUnosa != value))
				{
					this.OnKolicinaUnosaChanging(value);
					this.SendPropertyChanging();
					this._KolicinaUnosa = value;
					this.SendPropertyChanged("KolicinaUnosa");
					this.OnKolicinaUnosaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Datum", DbType="Date NOT NULL")]
		public System.DateTime Datum
		{
			get
			{
				return this._Datum;
			}
			set
			{
				if ((this._Datum != value))
				{
					this.OnDatumChanging(value);
					this.SendPropertyChanging();
					this._Datum = value;
					this.SendPropertyChanged("Datum");
					this.OnDatumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vreme", DbType="Time NOT NULL")]
		public System.TimeSpan Vreme
		{
			get
			{
				return this._Vreme;
			}
			set
			{
				if ((this._Vreme != value))
				{
					this.OnVremeChanging(value);
					this.SendPropertyChanging();
					this._Vreme = value;
					this.SendPropertyChanged("Vreme");
					this.OnVremeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Magacin_UnosUMagacin", Storage="_Magacin", ThisKey="IDMagacina,SifraProizoda", OtherKey="IDMagacina,SifraProizvoda", IsForeignKey=true)]
		public Magacin Magacin
		{
			get
			{
				return this._Magacin.Entity;
			}
			set
			{
				Magacin previousValue = this._Magacin.Entity;
				if (((previousValue != value) 
							|| (this._Magacin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Magacin.Entity = null;
						previousValue.UnosUMagacins.Remove(this);
					}
					this._Magacin.Entity = value;
					if ((value != null))
					{
						value.UnosUMagacins.Add(this);
						this._IDMagacina = value.IDMagacina;
						this._SifraProizoda = value.SifraProizvoda;
					}
					else
					{
						this._IDMagacina = default(int);
						this._SifraProizoda = default(string);
					}
					this.SendPropertyChanged("Magacin");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Prodavac_UnosUMagacin", Storage="_Prodavac", ThisKey="IDProdavac", OtherKey="IDProdavac", IsForeignKey=true)]
		public Prodavac Prodavac
		{
			get
			{
				return this._Prodavac.Entity;
			}
			set
			{
				Prodavac previousValue = this._Prodavac.Entity;
				if (((previousValue != value) 
							|| (this._Prodavac.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Prodavac.Entity = null;
						previousValue.UnosUMagacins.Remove(this);
					}
					this._Prodavac.Entity = value;
					if ((value != null))
					{
						value.UnosUMagacins.Add(this);
						this._IDProdavac = value.IDProdavac;
					}
					else
					{
						this._IDProdavac = default(int);
					}
					this.SendPropertyChanged("Prodavac");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ZahtevZaBorbu")]
	public partial class ZahtevZaBorbu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _IDZahtevaKorisnika;
		
		private System.DateTime _ZahtevaniDatum;
		
		private string _ZahtevanoMesto;
		
		private string _tipBorbe;
		
		private string _tezinskaKategorija;
		
		private string _korisničkeNapomene;
		
		private int _IDKorisnik;
		
		private EntityRef<Korisnik> _Korisnik;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDZahtevaKorisnikaChanging(string value);
    partial void OnIDZahtevaKorisnikaChanged();
    partial void OnZahtevaniDatumChanging(System.DateTime value);
    partial void OnZahtevaniDatumChanged();
    partial void OnZahtevanoMestoChanging(string value);
    partial void OnZahtevanoMestoChanged();
    partial void OntipBorbeChanging(string value);
    partial void OntipBorbeChanged();
    partial void OntezinskaKategorijaChanging(string value);
    partial void OntezinskaKategorijaChanged();
    partial void OnkorisničkeNapomeneChanging(string value);
    partial void OnkorisničkeNapomeneChanged();
    partial void OnIDKorisnikChanging(int value);
    partial void OnIDKorisnikChanged();
    #endregion
		
		public ZahtevZaBorbu()
		{
			this._Korisnik = default(EntityRef<Korisnik>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDZahtevaKorisnika", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string IDZahtevaKorisnika
		{
			get
			{
				return this._IDZahtevaKorisnika;
			}
			set
			{
				if ((this._IDZahtevaKorisnika != value))
				{
					this.OnIDZahtevaKorisnikaChanging(value);
					this.SendPropertyChanging();
					this._IDZahtevaKorisnika = value;
					this.SendPropertyChanged("IDZahtevaKorisnika");
					this.OnIDZahtevaKorisnikaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZahtevaniDatum", DbType="Date NOT NULL")]
		public System.DateTime ZahtevaniDatum
		{
			get
			{
				return this._ZahtevaniDatum;
			}
			set
			{
				if ((this._ZahtevaniDatum != value))
				{
					this.OnZahtevaniDatumChanging(value);
					this.SendPropertyChanging();
					this._ZahtevaniDatum = value;
					this.SendPropertyChanged("ZahtevaniDatum");
					this.OnZahtevaniDatumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZahtevanoMesto", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ZahtevanoMesto
		{
			get
			{
				return this._ZahtevanoMesto;
			}
			set
			{
				if ((this._ZahtevanoMesto != value))
				{
					this.OnZahtevanoMestoChanging(value);
					this.SendPropertyChanging();
					this._ZahtevanoMesto = value;
					this.SendPropertyChanged("ZahtevanoMesto");
					this.OnZahtevanoMestoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tipBorbe", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string tipBorbe
		{
			get
			{
				return this._tipBorbe;
			}
			set
			{
				if ((this._tipBorbe != value))
				{
					this.OntipBorbeChanging(value);
					this.SendPropertyChanging();
					this._tipBorbe = value;
					this.SendPropertyChanged("tipBorbe");
					this.OntipBorbeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tezinskaKategorija", DbType="NVarChar(50)")]
		public string tezinskaKategorija
		{
			get
			{
				return this._tezinskaKategorija;
			}
			set
			{
				if ((this._tezinskaKategorija != value))
				{
					this.OntezinskaKategorijaChanging(value);
					this.SendPropertyChanging();
					this._tezinskaKategorija = value;
					this.SendPropertyChanged("tezinskaKategorija");
					this.OntezinskaKategorijaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_korisničkeNapomene", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string korisničkeNapomene
		{
			get
			{
				return this._korisničkeNapomene;
			}
			set
			{
				if ((this._korisničkeNapomene != value))
				{
					this.OnkorisničkeNapomeneChanging(value);
					this.SendPropertyChanging();
					this._korisničkeNapomene = value;
					this.SendPropertyChanged("korisničkeNapomene");
					this.OnkorisničkeNapomeneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDKorisnik", DbType="Int NOT NULL")]
		public int IDKorisnik
		{
			get
			{
				return this._IDKorisnik;
			}
			set
			{
				if ((this._IDKorisnik != value))
				{
					if (this._Korisnik.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDKorisnikChanging(value);
					this.SendPropertyChanging();
					this._IDKorisnik = value;
					this.SendPropertyChanged("IDKorisnik");
					this.OnIDKorisnikChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Korisnik_ZahtevZaBorbu", Storage="_Korisnik", ThisKey="IDKorisnik", OtherKey="IDKorisnika", IsForeignKey=true)]
		public Korisnik Korisnik
		{
			get
			{
				return this._Korisnik.Entity;
			}
			set
			{
				Korisnik previousValue = this._Korisnik.Entity;
				if (((previousValue != value) 
							|| (this._Korisnik.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Korisnik.Entity = null;
						previousValue.ZahtevZaBorbus.Remove(this);
					}
					this._Korisnik.Entity = value;
					if ((value != null))
					{
						value.ZahtevZaBorbus.Add(this);
						this._IDKorisnik = value.IDKorisnika;
					}
					else
					{
						this._IDKorisnik = default(int);
					}
					this.SendPropertyChanged("Korisnik");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
